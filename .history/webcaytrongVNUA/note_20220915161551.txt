Hàm .destroy() chỉ thực hiện được khi đứng trước nó là 1 object của Sequelize.

Đối với các function(hàm) dùng để xử lý(handle) sự kiện(evenet) onChange, onClick, on... các kiểu, thì ta nên dùng arrow function khi 
thực hiện gán lệnh cho onClick, onChange...

-Props là các biến, data được truyền từ component cha và có thể truy cập được ở cả các component con.

-State được khởi tạo và chỉnh sửa và chỉ có thể truy cập bởi chính bản thân component chứa nó.
 -Điểm khác nhau lớn nhất giữa props và state đó là props không thể thay đổi,
-  còn state có thể thay đổi do đó hiệu năng của props tốt hơn state.


... (there dots): là copy và paste trong ReactJs

với hàm map trong JS, ta không thể dùng lệnh break;

alert không giúp sinh ra 1 object;

để truyền fire events từ con sang cha, ta dùng props
 để truyền fire events từ cha sang con, ta dùng ref
 nếu  phải thao tác vs database, ta có thể dùng emitter(áp dụng cho cả bên cha lẫn con), cơ chế hoạt động của emitter khá giống chat real-time

 với emitter thì bên nào muốn nhận fire event, thì ta dùng emitter.on(), còn bên nào gửi fire event, thì dùng emitter.emit(),

 React.Fragments giúp ta viết code ngắn hơn mà vẫn render đúng thứ thự của html/css. Link: https://freetuts.net/fragments-trong-reactjs-2433.html

 Redux chạy xong xong với React, giống như local storage, lưu trữ mọi biến và giúp quản lý state cho React, nhờ đó, nhiều component chỉ cần gọi
  state đã lưu từ redux mà không cần thiết phải gọi lại API.

  đổi ngôn ngữ thì sang điều chỉnh lại file appReducer.js

  muốn xác định đang có logic bug ở file nào, hãy vào file web.js đầu tiên

  với prj này, sau khi thay đổi thông tin của người dùng, ta cần logout ra bên ngoài rồi đăng nhập lại để redux persit load lại

  muốn tìm path hoặc đặt thêm path cần thao tác, đến file System.js và đặt path khác

  axios là 1 thư viện lấy và gửi thông tin từ phía client về server

  muốn fire 1 actions của redux(hay là gọi 1 action của redux, ta phải bọc dispatch vào trong hàm đó).

  hàm 