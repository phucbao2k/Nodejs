[{"C:\\Users\\1\\OneDrive\\Documents\\GitHub\\webcaytrongVNUA\\test\\webcaytrongVNUA\\webcaytrongVNUA\\React\\src\\index.js":"1","C:\\Users\\1\\OneDrive\\Documents\\GitHub\\webcaytrongVNUA\\test\\webcaytrongVNUA\\webcaytrongVNUA\\React\\src\\redux.js":"2","C:\\Users\\1\\OneDrive\\Documents\\GitHub\\webcaytrongVNUA\\test\\webcaytrongVNUA\\webcaytrongVNUA\\React\\src\\serviceWorker.js":"3","C:\\Users\\1\\OneDrive\\Documents\\GitHub\\webcaytrongVNUA\\test\\webcaytrongVNUA\\webcaytrongVNUA\\React\\src\\hoc\\IntlProviderWrapper.js":"4","C:\\Users\\1\\OneDrive\\Documents\\GitHub\\webcaytrongVNUA\\test\\webcaytrongVNUA\\webcaytrongVNUA\\React\\src\\containers\\App.js":"5","C:\\Users\\1\\OneDrive\\Documents\\GitHub\\webcaytrongVNUA\\test\\webcaytrongVNUA\\webcaytrongVNUA\\React\\src\\hoc\\authentication.js":"6","C:\\Users\\1\\OneDrive\\Documents\\GitHub\\webcaytrongVNUA\\test\\webcaytrongVNUA\\webcaytrongVNUA\\React\\src\\containers\\auth\\Login.js":"7","C:\\Users\\1\\OneDrive\\Documents\\GitHub\\webcaytrongVNUA\\test\\webcaytrongVNUA\\webcaytrongVNUA\\React\\src\\routes\\Home.js":"8","C:\\Users\\1\\OneDrive\\Documents\\GitHub\\webcaytrongVNUA\\test\\webcaytrongVNUA\\webcaytrongVNUA\\React\\src\\containers\\Header\\Header.js":"9","C:\\Users\\1\\OneDrive\\Documents\\GitHub\\webcaytrongVNUA\\test\\webcaytrongVNUA\\webcaytrongVNUA\\React\\src\\routes\\System.js":"10","C:\\Users\\1\\OneDrive\\Documents\\GitHub\\webcaytrongVNUA\\test\\webcaytrongVNUA\\webcaytrongVNUA\\React\\src\\components\\ConfirmModal.js":"11","C:\\Users\\1\\OneDrive\\Documents\\GitHub\\webcaytrongVNUA\\test\\webcaytrongVNUA\\webcaytrongVNUA\\React\\src\\components\\CustomToast.js":"12","C:\\Users\\1\\OneDrive\\Documents\\GitHub\\webcaytrongVNUA\\test\\webcaytrongVNUA\\webcaytrongVNUA\\React\\src\\store\\reducers\\rootReducer.js":"13","C:\\Users\\1\\OneDrive\\Documents\\GitHub\\webcaytrongVNUA\\test\\webcaytrongVNUA\\webcaytrongVNUA\\React\\src\\store\\actions\\actionTypes.js":"14","C:\\Users\\1\\OneDrive\\Documents\\GitHub\\webcaytrongVNUA\\test\\webcaytrongVNUA\\webcaytrongVNUA\\React\\src\\utils\\index.js":"15","C:\\Users\\1\\OneDrive\\Documents\\GitHub\\webcaytrongVNUA\\test\\webcaytrongVNUA\\webcaytrongVNUA\\React\\src\\components\\Navigator.js":"16","C:\\Users\\1\\OneDrive\\Documents\\GitHub\\webcaytrongVNUA\\test\\webcaytrongVNUA\\webcaytrongVNUA\\React\\src\\containers\\Header\\menuApp.js":"17","C:\\Users\\1\\OneDrive\\Documents\\GitHub\\webcaytrongVNUA\\test\\webcaytrongVNUA\\webcaytrongVNUA\\React\\src\\components\\CustomScrollbars.js":"18","C:\\Users\\1\\OneDrive\\Documents\\GitHub\\webcaytrongVNUA\\test\\webcaytrongVNUA\\webcaytrongVNUA\\React\\src\\store\\reducers\\appReducer.js":"19","C:\\Users\\1\\OneDrive\\Documents\\GitHub\\webcaytrongVNUA\\test\\webcaytrongVNUA\\webcaytrongVNUA\\React\\src\\store\\reducers\\userReducer.js":"20","C:\\Users\\1\\OneDrive\\Documents\\GitHub\\webcaytrongVNUA\\test\\webcaytrongVNUA\\webcaytrongVNUA\\React\\src\\containers\\System\\UserManage.js":"21","C:\\Users\\1\\OneDrive\\Documents\\GitHub\\webcaytrongVNUA\\test\\webcaytrongVNUA\\webcaytrongVNUA\\React\\src\\store\\actions\\index.js":"22","C:\\Users\\1\\OneDrive\\Documents\\GitHub\\webcaytrongVNUA\\test\\webcaytrongVNUA\\webcaytrongVNUA\\React\\src\\utils\\KeyCodeUtils.js":"23","C:\\Users\\1\\OneDrive\\Documents\\GitHub\\webcaytrongVNUA\\test\\webcaytrongVNUA\\webcaytrongVNUA\\React\\src\\utils\\LanguageUtils.js":"24","C:\\Users\\1\\OneDrive\\Documents\\GitHub\\webcaytrongVNUA\\test\\webcaytrongVNUA\\webcaytrongVNUA\\React\\src\\utils\\constant.js":"25","C:\\Users\\1\\OneDrive\\Documents\\GitHub\\webcaytrongVNUA\\test\\webcaytrongVNUA\\webcaytrongVNUA\\React\\src\\utils\\CommonUtils.js":"26","C:\\Users\\1\\OneDrive\\Documents\\GitHub\\webcaytrongVNUA\\test\\webcaytrongVNUA\\webcaytrongVNUA\\React\\src\\utils\\ToastUtil.js":"27","C:\\Users\\1\\OneDrive\\Documents\\GitHub\\webcaytrongVNUA\\test\\webcaytrongVNUA\\webcaytrongVNUA\\React\\src\\store\\actions\\userActions.js":"28","C:\\Users\\1\\OneDrive\\Documents\\GitHub\\webcaytrongVNUA\\test\\webcaytrongVNUA\\webcaytrongVNUA\\React\\src\\store\\actions\\appActions.js":"29","C:\\Users\\1\\OneDrive\\Documents\\GitHub\\webcaytrongVNUA\\test\\webcaytrongVNUA\\webcaytrongVNUA\\React\\src\\services\\index.js":"30","C:\\Users\\1\\OneDrive\\Documents\\GitHub\\webcaytrongVNUA\\test\\webcaytrongVNUA\\webcaytrongVNUA\\React\\src\\services\\userService.js":"31","C:\\Users\\1\\OneDrive\\Documents\\GitHub\\webcaytrongVNUA\\test\\webcaytrongVNUA\\webcaytrongVNUA\\React\\src\\axios.js":"32","C:\\Users\\1\\OneDrive\\Documents\\GitHub\\webcaytrongVNUA\\test\\webcaytrongVNUA\\webcaytrongVNUA\\React\\src\\config.js":"33","C:\\Users\\1\\OneDrive\\Documents\\GitHub\\webcaytrongVNUA\\test\\webcaytrongVNUA\\webcaytrongVNUA\\React\\src\\containers\\System\\ModalUser.js":"34","C:\\Users\\1\\OneDrive\\Documents\\GitHub\\webcaytrongVNUA\\test\\webcaytrongVNUA\\webcaytrongVNUA\\React\\src\\utils\\emitter.js":"35","C:\\Users\\1\\OneDrive\\Documents\\GitHub\\webcaytrongVNUA\\test\\webcaytrongVNUA\\webcaytrongVNUA\\React\\src\\containers\\System\\ModalEditUser.js":"36","C:\\Users\\1\\OneDrive\\Documents\\GitHub\\webcaytrongVNUA\\test\\webcaytrongVNUA\\webcaytrongVNUA\\React\\src\\containers\\HomePage\\HomePage.js":"37","C:\\Users\\1\\OneDrive\\Documents\\GitHub\\webcaytrongVNUA\\test\\webcaytrongVNUA\\webcaytrongVNUA\\React\\src\\containers\\HomePage\\HomeHeader.js":"38","C:\\Users\\1\\OneDrive\\Documents\\GitHub\\webcaytrongVNUA\\test\\webcaytrongVNUA\\webcaytrongVNUA\\React\\src\\containers\\HomePage\\Section\\Specialty.js":"39","C:\\Users\\1\\OneDrive\\Documents\\GitHub\\webcaytrongVNUA\\test\\webcaytrongVNUA\\webcaytrongVNUA\\React\\src\\containers\\HomePage\\Section\\MedicalFacility.js":"40","C:\\Users\\1\\OneDrive\\Documents\\GitHub\\webcaytrongVNUA\\test\\webcaytrongVNUA\\webcaytrongVNUA\\React\\src\\containers\\HomePage\\Section\\OutStandingDoctor.js":"41","C:\\Users\\1\\OneDrive\\Documents\\GitHub\\webcaytrongVNUA\\test\\webcaytrongVNUA\\webcaytrongVNUA\\React\\src\\containers\\HomePage\\Section\\HandBook.js":"42","C:\\Users\\1\\OneDrive\\Documents\\GitHub\\webcaytrongVNUA\\test\\webcaytrongVNUA\\webcaytrongVNUA\\React\\src\\containers\\HomePage\\Section\\About.js":"43","C:\\Users\\1\\OneDrive\\Documents\\GitHub\\webcaytrongVNUA\\test\\webcaytrongVNUA\\webcaytrongVNUA\\React\\src\\containers\\HomePage\\HomeFooter.js":"44","C:\\Users\\1\\OneDrive\\Documents\\GitHub\\webcaytrongVNUA\\test\\webcaytrongVNUA\\webcaytrongVNUA\\React\\src\\containers\\System\\UserRedux.js":"45","C:\\Users\\1\\OneDrive\\Documents\\GitHub\\webcaytrongVNUA\\test\\webcaytrongVNUA\\webcaytrongVNUA\\React\\src\\store\\actions\\adminActions.js":"46","C:\\Users\\1\\OneDrive\\Documents\\GitHub\\webcaytrongVNUA\\test\\webcaytrongVNUA\\webcaytrongVNUA\\React\\src\\store\\reducers\\adminReducer.js":"47","C:\\Users\\1\\OneDrive\\Documents\\GitHub\\webcaytrongVNUA\\test\\webcaytrongVNUA\\webcaytrongVNUA\\React\\src\\containers\\System\\TableManageUser.js":"48","C:\\Users\\1\\OneDrive\\Documents\\GitHub\\webcaytrongVNUA\\test\\webcaytrongVNUA\\webcaytrongVNUA\\React\\src\\containers\\System\\ManageDoctor.js":"49","C:\\Users\\1\\OneDrive\\Documents\\GitHub\\webcaytrongVNUA\\test\\webcaytrongVNUA\\webcaytrongVNUA\\React\\src\\containers\\Patient\\Doctor\\DetailDoctor.js":"50","C:\\Users\\1\\OneDrive\\Documents\\GitHub\\webcaytrongVNUA\\test\\webcaytrongVNUA\\webcaytrongVNUA\\React\\src\\routes\\Doctor.js":"51","C:\\Users\\1\\OneDrive\\Documents\\GitHub\\webcaytrongVNUA\\test\\webcaytrongVNUA\\webcaytrongVNUA\\React\\src\\containers\\Patient\\Doctor\\ManageSchedule.js":"52","C:\\Users\\1\\OneDrive\\Documents\\GitHub\\webcaytrongVNUA\\test\\webcaytrongVNUA\\webcaytrongVNUA\\React\\src\\components\\Input\\DatePicker.js":"53","C:\\Users\\1\\OneDrive\\Documents\\GitHub\\webcaytrongVNUA\\test\\webcaytrongVNUA\\webcaytrongVNUA\\React\\src\\containers\\Patient\\Doctor\\DoctorSchedule.js":"54","C:\\Users\\1\\OneDrive\\Documents\\GitHub\\webcaytrongVNUA\\test\\webcaytrongVNUA\\webcaytrongVNUA\\React\\src\\containers\\Patient\\Doctor\\DoctorExtraInfor.js":"55","C:\\Users\\1\\OneDrive\\Documents\\GitHub\\webcaytrongVNUA\\test\\webcaytrongVNUA\\webcaytrongVNUA\\React\\src\\containers\\Patient\\Doctor\\Modal\\BookingModal.js":"56","C:\\Users\\1\\OneDrive\\Documents\\GitHub\\webcaytrongVNUA\\test\\webcaytrongVNUA\\webcaytrongVNUA\\React\\src\\containers\\Patient\\Doctor\\ProfileDoctor.js":"57","C:\\Users\\1\\OneDrive\\Documents\\GitHub\\webcaytrongVNUA\\test\\webcaytrongVNUA\\webcaytrongVNUA\\React\\src\\components\\Input\\index.js":"58","C:\\Users\\1\\OneDrive\\Documents\\GitHub\\webcaytrongVNUA\\test\\webcaytrongVNUA\\webcaytrongVNUA\\React\\src\\components\\Input\\InputSuggest.js":"59","C:\\Users\\1\\OneDrive\\Documents\\GitHub\\webcaytrongVNUA\\test\\webcaytrongVNUA\\webcaytrongVNUA\\React\\src\\containers\\Patient\\VerifyEmail.js":"60","C:\\Users\\1\\OneDrive\\Documents\\GitHub\\webcaytrongVNUA\\test\\webcaytrongVNUA\\webcaytrongVNUA\\React\\src\\containers\\auth\\Register.js":"61","C:\\Users\\1\\OneDrive\\Documents\\GitHub\\webcaytrongVNUA\\test\\webcaytrongVNUA\\webcaytrongVNUA\\React\\src\\containers\\System\\Specialty\\ManageSpecialty.js":"62","C:\\Users\\1\\OneDrive\\Documents\\GitHub\\webcaytrongVNUA\\test\\webcaytrongVNUA\\webcaytrongVNUA\\React\\src\\containers\\Patient\\Specialty\\DetailSpecialty.js":"63","C:\\Users\\1\\OneDrive\\Documents\\GitHub\\webcaytrongVNUA\\test\\webcaytrongVNUA\\webcaytrongVNUA\\React\\src\\containers\\System\\Clinic\\ManageClinic.js":"64"},{"size":927,"mtime":1664208778832,"results":"65","hashOfConfig":"66"},{"size":1514,"mtime":1664208781732,"results":"67","hashOfConfig":"66"},{"size":5086,"mtime":1662132386672,"results":"68","hashOfConfig":"66"},{"size":1095,"mtime":1664208688993,"results":"69","hashOfConfig":"66"},{"size":4123,"mtime":1666617265194,"results":"70","hashOfConfig":"66"},{"size":789,"mtime":1664208685257,"results":"71","hashOfConfig":"66"},{"size":6011,"mtime":1666460667439,"results":"72","hashOfConfig":"66"},{"size":638,"mtime":1664208695692,"results":"73","hashOfConfig":"66"},{"size":3172,"mtime":1666796569961,"results":"74","hashOfConfig":"66"},{"size":1868,"mtime":1666781896118,"results":"75","hashOfConfig":"66"},{"size":3862,"mtime":1662132386648,"results":"76","hashOfConfig":"66"},{"size":2282,"mtime":1662132386652,"results":"77","hashOfConfig":"66"},{"size":968,"mtime":1664208734242,"results":"78","hashOfConfig":"66"},{"size":1953,"mtime":1664808254707,"results":"79","hashOfConfig":"66"},{"size":251,"mtime":1662693139881,"results":"80","hashOfConfig":"66"},{"size":9328,"mtime":1662360195889,"results":"81","hashOfConfig":"66"},{"size":1999,"mtime":1666632772964,"results":"82","hashOfConfig":"66"},{"size":3173,"mtime":1662132386651,"results":"83","hashOfConfig":"66"},{"size":1116,"mtime":1664208731010,"results":"84","hashOfConfig":"66"},{"size":830,"mtime":1664208737758,"results":"85","hashOfConfig":"66"},{"size":6768,"mtime":1664208666187,"results":"86","hashOfConfig":"66"},{"size":91,"mtime":1663152319961,"results":"87","hashOfConfig":"66"},{"size":683,"mtime":1664208765132,"results":"88","hashOfConfig":"66"},{"size":963,"mtime":1664208761374,"results":"89","hashOfConfig":"66"},{"size":761,"mtime":1666608341697,"results":"90","hashOfConfig":"66"},{"size":354,"mtime":1664208749772,"results":"91","hashOfConfig":"66"},{"size":3001,"mtime":1664208768110,"results":"92","hashOfConfig":"66"},{"size":414,"mtime":1664208725057,"results":"93","hashOfConfig":"66"},{"size":572,"mtime":1664208720368,"results":"94","hashOfConfig":"66"},{"size":114,"mtime":1662626361575,"results":"95","hashOfConfig":"66"},{"size":3251,"mtime":1666781984230,"results":"96","hashOfConfig":"66"},{"size":401,"mtime":1664208772753,"results":"97","hashOfConfig":"66"},{"size":445,"mtime":1662132386664,"results":"98","hashOfConfig":"99"},{"size":4752,"mtime":1664208656137,"results":"100","hashOfConfig":"66"},{"size":136,"mtime":1664208755382,"results":"101","hashOfConfig":"66"},{"size":5406,"mtime":1664208651205,"results":"102","hashOfConfig":"66"},{"size":1718,"mtime":1664208627367,"results":"103","hashOfConfig":"66"},{"size":7649,"mtime":1666622090953,"results":"104","hashOfConfig":"66"},{"size":3204,"mtime":1666617148153,"results":"105","hashOfConfig":"66"},{"size":3293,"mtime":1664208596269,"results":"106","hashOfConfig":"66"},{"size":4330,"mtime":1666105206452,"results":"107","hashOfConfig":"66"},{"size":3106,"mtime":1664208593342,"results":"108","hashOfConfig":"66"},{"size":1550,"mtime":1666625470281,"results":"109","hashOfConfig":"66"},{"size":853,"mtime":1664208617492,"results":"110","hashOfConfig":"66"},{"size":15386,"mtime":1665493938169,"results":"111","hashOfConfig":"66"},{"size":10808,"mtime":1666696069493,"results":"112","hashOfConfig":"66"},{"size":4265,"mtime":1664809093968,"results":"113","hashOfConfig":"66"},{"size":4806,"mtime":1664208659295,"results":"114","hashOfConfig":"66"},{"size":20091,"mtime":1666718837869,"results":"115","hashOfConfig":"66"},{"size":4285,"mtime":1666105114463,"results":"116","hashOfConfig":"66"},{"size":1889,"mtime":1664208692331,"results":"117","hashOfConfig":"66"},{"size":9222,"mtime":1665588415296,"results":"118","hashOfConfig":"66"},{"size":5954,"mtime":1662132386655,"results":"119","hashOfConfig":"66"},{"size":8009,"mtime":1666777495403,"results":"120","hashOfConfig":"66"},{"size":7107,"mtime":1666691963655,"results":"121","hashOfConfig":"66"},{"size":14379,"mtime":1666777782173,"results":"122","hashOfConfig":"66"},{"size":5709,"mtime":1666777341034,"results":"123","hashOfConfig":"66"},{"size":112,"mtime":1662132386661,"results":"124","hashOfConfig":"66"},{"size":4358,"mtime":1662132386656,"results":"125","hashOfConfig":"66"},{"size":2573,"mtime":1666267321599,"results":"126","hashOfConfig":"66"},{"size":4748,"mtime":1666518678200,"results":"127","hashOfConfig":"66"},{"size":4027,"mtime":1666583846721,"results":"128","hashOfConfig":"66"},{"size":6711,"mtime":1666776925955,"results":"129","hashOfConfig":"66"},{"size":4364,"mtime":1666782603755,"results":"130","hashOfConfig":"66"},{"filePath":"131","messages":"132","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"133"},"1vystd0",{"filePath":"134","messages":"135","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"133"},{"filePath":"136","messages":"137","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"133"},{"filePath":"138","messages":"139","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"133"},{"filePath":"140","messages":"141","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"133"},{"filePath":"142","messages":"143","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"133"},{"filePath":"144","messages":"145","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"146","usedDeprecatedRules":"133"},{"filePath":"147","messages":"148","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"133"},{"filePath":"149","messages":"150","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"151","messages":"152","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"153","messages":"154","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"155"},{"filePath":"156","messages":"157","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"133"},{"filePath":"158","messages":"159","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"160","usedDeprecatedRules":"133"},{"filePath":"161","messages":"162","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"133"},{"filePath":"163","messages":"164","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"133"},{"filePath":"165","messages":"166","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"133"},{"filePath":"167","messages":"168","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"133"},{"filePath":"169","messages":"170","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"133"},{"filePath":"171","messages":"172","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"133"},{"filePath":"173","messages":"174","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"133"},{"filePath":"175","messages":"176","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"177","usedDeprecatedRules":"133"},{"filePath":"178","messages":"179","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"133"},{"filePath":"180","messages":"181","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"133"},{"filePath":"182","messages":"183","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"133"},{"filePath":"184","messages":"185","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"133"},{"filePath":"186","messages":"187","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"133"},{"filePath":"188","messages":"189","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"133"},{"filePath":"190","messages":"191","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"133"},{"filePath":"192","messages":"193","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"133"},{"filePath":"194","messages":"195","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"196"},{"filePath":"197","messages":"198","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"199","messages":"200","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"201","usedDeprecatedRules":"133"},{"filePath":"202","messages":"203","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"722k2h",{"filePath":"204","messages":"205","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"206","usedDeprecatedRules":"133"},{"filePath":"207","messages":"208","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"133"},{"filePath":"209","messages":"210","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"211","usedDeprecatedRules":"133"},{"filePath":"212","messages":"213","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"214","usedDeprecatedRules":"133"},{"filePath":"215","messages":"216","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"217","usedDeprecatedRules":"133"},{"filePath":"218","messages":"219","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"133"},{"filePath":"220","messages":"221","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"133"},{"filePath":"222","messages":"223","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"133"},{"filePath":"224","messages":"225","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"133"},{"filePath":"226","messages":"227","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"133"},{"filePath":"228","messages":"229","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"133"},{"filePath":"230","messages":"231","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"232","usedDeprecatedRules":"133"},{"filePath":"233","messages":"234","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"133"},{"filePath":"235","messages":"236","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"133"},{"filePath":"237","messages":"238","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"239","usedDeprecatedRules":"133"},{"filePath":"240","messages":"241","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"242","usedDeprecatedRules":"133"},{"filePath":"243","messages":"244","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"133"},{"filePath":"245","messages":"246","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"247","usedDeprecatedRules":"133"},{"filePath":"248","messages":"249","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"250","usedDeprecatedRules":"133"},{"filePath":"251","messages":"252","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"133"},{"filePath":"253","messages":"254","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"255","messages":"256","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"133"},{"filePath":"257","messages":"258","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"259","messages":"260","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"261","messages":"262","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"263","messages":"264","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"265","messages":"266","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"133"},{"filePath":"267","messages":"268","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"269","usedDeprecatedRules":"133"},{"filePath":"270","messages":"271","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"272","usedDeprecatedRules":"133"},{"filePath":"273","messages":"274","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"275","messages":"276","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"C:\\Users\\1\\OneDrive\\Documents\\GitHub\\webcaytrongVNUA\\test\\webcaytrongVNUA\\webcaytrongVNUA\\React\\src\\index.js",[],["277","278"],"C:\\Users\\1\\OneDrive\\Documents\\GitHub\\webcaytrongVNUA\\test\\webcaytrongVNUA\\webcaytrongVNUA\\React\\src\\redux.js",[],"C:\\Users\\1\\OneDrive\\Documents\\GitHub\\webcaytrongVNUA\\test\\webcaytrongVNUA\\webcaytrongVNUA\\React\\src\\serviceWorker.js",[],"C:\\Users\\1\\OneDrive\\Documents\\GitHub\\webcaytrongVNUA\\test\\webcaytrongVNUA\\webcaytrongVNUA\\React\\src\\hoc\\IntlProviderWrapper.js",[],"C:\\Users\\1\\OneDrive\\Documents\\GitHub\\webcaytrongVNUA\\test\\webcaytrongVNUA\\webcaytrongVNUA\\React\\src\\containers\\App.js",[],"C:\\Users\\1\\OneDrive\\Documents\\GitHub\\webcaytrongVNUA\\test\\webcaytrongVNUA\\webcaytrongVNUA\\React\\src\\hoc\\authentication.js",[],"C:\\Users\\1\\OneDrive\\Documents\\GitHub\\webcaytrongVNUA\\test\\webcaytrongVNUA\\webcaytrongVNUA\\React\\src\\containers\\auth\\Login.js",["279","280"],"import React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { push } from \"connected-react-router\";\r\nimport * as actions from \"../../store/actions\";\r\nimport './Login.scss';\r\nimport { FormattedMessage } from 'react-intl';\r\nimport Register from './Register';\r\n// import {userService} from '../../services'\r\nimport { emitter } from '../../utils/emitter';\r\nimport { handleLoginApi, createNewUserService } from '../../services/userService';\r\nimport { reject } from 'lodash';\r\nclass Login extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      username: '',\r\n      password: '',\r\n       isOpenModalUser: false,\r\n      isShowPassword: false,\r\n      errMessage: ''\r\n    }\r\n  }\r\n\r\n  handleOnChangeUsername = (event) => {\r\n    this.setState({ username: event.target.value })\r\n  }\r\n  handleOnChangePassword = (event) => {\r\n    this.setState({ password: event.target.value })\r\n  }\r\n  handleLogin = async () => {\r\n    this.setState({\r\n      errMessage: ''\r\n      // để clear mã lỗi trong trường hợp lần đăng nhập trước\r\n      // bị lỗi, lần nhập thông tin sau sẽ hiện ra mã lỗi khác hoặc đăng nhập thành công \r\n    })\r\n    try {\r\n      let data = await handleLoginApi(this.state.username, this.state.password);\r\n      if (data && data.errCode !== 0) {\r\n        this.setState({\r\n          errMessage: data.message\r\n        })\r\n      }\r\n      if (data && data.errCode === 0) {\r\n        this.props.userLoginSuccess(data.user)\r\n\r\n      }\r\n    } catch (error) {\r\n      if (error.response) {\r\n        if (error.response.data) {\r\n          this.setState({\r\n            errorMessage: error.response.data.message\r\n          })\r\n        }\r\n      }\r\n    }\r\n  }\r\n\r\n  handleShowHidePassword = (event) => {\r\n    this.setState({\r\n      isShowPassword: !this.state.isShowPassword\r\n    })\r\n  }\r\n  handleKeyDown = (event) => {\r\n    if (event.key === 'Enter' || event.keyCode === 13) {\r\n      this.handleLogin();\r\n    }\r\n  }\r\n  handleAddNewUser = () => {\r\n    this.setState({\r\n      isOpenModalUser: true,\r\n    })\r\n  }\r\n  toggleUserModal = () => {\r\n    this.setState({\r\n      isOpenModalUser: !this.state.isOpenModalUser,\r\n    })\r\n  }\r\n  createNewUser = async (data) => {\r\n    try {\r\n      let response = await createNewUserService(data);\r\n      if (response && response.errCode !== 0) {\r\n        alert(response.errMessage);\r\n      } else {\r\n        this.setState({\r\n          isOpenModalUser: false,\r\n        })\r\n        emitter.emit('EVENT_CLEAR_MODAL_DATA')\r\n      }\r\n    } catch (e) {\r\n      console.log(e);\r\n    }\r\n  }\r\n  render() {\r\n    //JSX\r\n\r\n    return (\r\n     \r\n        <div className=\"login-background\">\r\n        <Register\r\n          isOpen={this.state.isOpenModalUser}\r\n          toggleFromParent={this.toggleUserModal}\r\n          createNewUser={this.createNewUser} />\r\n          <div className=\"login-container\">\r\n            <div className=\"login-content row\">\r\n\r\n              <div className=\"col-12  text-login\">Login </div>\r\n              <div className=\"col-12 form-group login-input\">\r\n                <label>Username:</label>\r\n                <input type=\"text\" className=\"form-control\" placeholder=\"Enter your username\"\r\n                  value={this.state.username} onChange={(event) => this.handleOnChangeUsername(event)}></input>\r\n              </div>\r\n              <div className=\"col-12 form-group login-input\">\r\n                <label>Password:</label>\r\n                <div className=\"cus-password-input\">\r\n                  <input type={this.state.isShowPassword ? 'text' : 'password'}\r\n                    className=\"form-control\" placeholder=\"Enter your password\"\r\n                    value={this.state.password}\r\n                    onChange={(event) => { this.handleOnChangePassword(event) }}\r\n                    onKeyDown={(event) => this.handleKeyDown(event)} ></input>\r\n                  <span onClick={() => { this.handleShowHidePassword() }}>\r\n\r\n                    <i className={this.state.isShowPassword ? 'fa-solid fa-eye' : 'fa-regular fa-eye-slash'}></i>\r\n                  </span>\r\n\r\n                </div>\r\n\r\n\r\n              </div>\r\n              <div className=\"col-12\" style={{ color: 'red' }}>\r\n                {this.state.errMessage}\r\n              </div>\r\n              {/* Đây là cách cmt của React, và style inline của React được viết như trên kia  */}\r\n              <div className=\"col-12 login-input\">\r\n                <button className=\"btn-login\" onClick={() => { this.handleLogin() }}>Login</button>\r\n              </div>\r\n              <div className=\"col-12\">\r\n                <span className=\"sign-up\">Or</span>\r\n              </div>\r\n              <div className=\"col-12 login-input\">\r\n              <button className=\"btn-login\" onClick={() => {this.handleAddNewUser()}}>Register</button>\r\n              </div>\r\n              <div className=\"col-12\">\r\n                <span className=\"forgot-pass\">Forgot your password?</span>\r\n              </div>\r\n              <div className=\"col-12 text-center mt-3\">\r\n                <span >Or Login with:</span>\r\n              </div>\r\n              <div className=\"col-12 social-login\">\r\n                <i className=\"fa-brands fa-google google\"></i>\r\n                <i className=\"fa-brands fa-facebook-f facebook\"></i>\r\n                <i className=\"fa-brands fa-twitter twitter\"></i>\r\n              </div>\r\n\r\n            </div>\r\n          </div>\r\n        </div>\r\n    \r\n     \r\n    )\r\n  }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n  return {\r\n    language: state.app.language\r\n  };\r\n};\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n  return {\r\n    navigate: (path) => dispatch(push(path)),\r\n    // adminLoginSuccess: (adminInfo) => dispatch(actions.adminLoginSuccess(adminInfo)),\r\n    // adminLoginFail: () => dispatch(actions.adminLoginFail()),\r\n    userLoginSuccess: (userInfo) => dispatch(actions.userLoginSuccess(userInfo))\r\n  };\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Login);\r\n","C:\\Users\\1\\OneDrive\\Documents\\GitHub\\webcaytrongVNUA\\test\\webcaytrongVNUA\\webcaytrongVNUA\\React\\src\\routes\\Home.js",[],"C:\\Users\\1\\OneDrive\\Documents\\GitHub\\webcaytrongVNUA\\test\\webcaytrongVNUA\\webcaytrongVNUA\\React\\src\\containers\\Header\\Header.js",[],"C:\\Users\\1\\OneDrive\\Documents\\GitHub\\webcaytrongVNUA\\test\\webcaytrongVNUA\\webcaytrongVNUA\\React\\src\\routes\\System.js",[],"C:\\Users\\1\\OneDrive\\Documents\\GitHub\\webcaytrongVNUA\\test\\webcaytrongVNUA\\webcaytrongVNUA\\React\\src\\components\\ConfirmModal.js",[],["281","282"],"C:\\Users\\1\\OneDrive\\Documents\\GitHub\\webcaytrongVNUA\\test\\webcaytrongVNUA\\webcaytrongVNUA\\React\\src\\components\\CustomToast.js",[],"C:\\Users\\1\\OneDrive\\Documents\\GitHub\\webcaytrongVNUA\\test\\webcaytrongVNUA\\webcaytrongVNUA\\React\\src\\store\\reducers\\rootReducer.js",["283"],"import { combineReducers } from 'redux';\r\nimport { connectRouter } from 'connected-react-router';\r\n\r\nimport appReducer from \"./appReducer\";\r\n\r\nimport userReducer from \"./userReducer\";\r\n\r\nimport autoMergeLevel2 from 'redux-persist/lib/stateReconciler/autoMergeLevel2';\r\nimport storage from 'redux-persist/lib/storage';\r\nimport { persistReducer } from 'redux-persist';\r\nimport adminReducer from './adminReducer';\r\n\r\nconst persistCommonConfig = {\r\n    storage: storage,\r\n    stateReconciler: autoMergeLevel2,\r\n};\r\n\r\nconst userPersistConfig = {\r\n    ...persistCommonConfig,\r\n    key: 'user',\r\n    whitelist: ['isLoggedIn', 'userInfo']\r\n};\r\nconst appPersistConfig = {\r\n    ...persistCommonConfig,\r\n    key: 'app',\r\n    whitelist: ['language']\r\n}\r\nexport default (history) => combineReducers({\r\n    router: connectRouter(history),\r\n    user: persistReducer(userPersistConfig, userReducer),\r\n    app: persistReducer(appPersistConfig, appReducer),\r\n    admin: adminReducer\r\n})","C:\\Users\\1\\OneDrive\\Documents\\GitHub\\webcaytrongVNUA\\test\\webcaytrongVNUA\\webcaytrongVNUA\\React\\src\\store\\actions\\actionTypes.js",[],"C:\\Users\\1\\OneDrive\\Documents\\GitHub\\webcaytrongVNUA\\test\\webcaytrongVNUA\\webcaytrongVNUA\\React\\src\\utils\\index.js",[],"C:\\Users\\1\\OneDrive\\Documents\\GitHub\\webcaytrongVNUA\\test\\webcaytrongVNUA\\webcaytrongVNUA\\React\\src\\components\\Navigator.js",[],"C:\\Users\\1\\OneDrive\\Documents\\GitHub\\webcaytrongVNUA\\test\\webcaytrongVNUA\\webcaytrongVNUA\\React\\src\\containers\\Header\\menuApp.js",[],"C:\\Users\\1\\OneDrive\\Documents\\GitHub\\webcaytrongVNUA\\test\\webcaytrongVNUA\\webcaytrongVNUA\\React\\src\\components\\CustomScrollbars.js",[],"C:\\Users\\1\\OneDrive\\Documents\\GitHub\\webcaytrongVNUA\\test\\webcaytrongVNUA\\webcaytrongVNUA\\React\\src\\store\\reducers\\appReducer.js",[],"C:\\Users\\1\\OneDrive\\Documents\\GitHub\\webcaytrongVNUA\\test\\webcaytrongVNUA\\webcaytrongVNUA\\React\\src\\store\\reducers\\userReducer.js",[],"C:\\Users\\1\\OneDrive\\Documents\\GitHub\\webcaytrongVNUA\\test\\webcaytrongVNUA\\webcaytrongVNUA\\React\\src\\containers\\System\\UserManage.js",["284"],"import React, { Component } from 'react';\r\nimport { FormattedMessage } from 'react-intl';\r\nimport { connect } from 'react-redux';\r\nimport './UserManage.scss';\r\nimport ModalUser from './ModalUser';\r\nimport { emitter } from '../../utils/emitter';\r\nimport ModalEditUser from './ModalEditUser';\r\n// import Header from '../Header/Header';\r\nimport { getAllUsers, createNewUserService, deleteUserService, editUserService } from '../../services/userService';\r\n// nếu muố import 1 function thì ta dùng dấu ngoặc nhọn\r\nclass UserManage extends Component {\r\n    // stands for properties and is being used for passing data from one component to another.\r\n    // But the important part here is that data with props are being passed in a uni-directional flow. ( one way from parent to child)\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            arrUsers: [],\r\n            isOpenModalUser: false,\r\n            isOpenModalEditUser: false,\r\n            userEdit: {}\r\n        }\r\n    }\r\n    //để lưu giá trị của 1 biến components, ta dùng state\r\n    //Component là một block code độc lập để phân chia các UI (giao diện người dùng) thành các phân nhỏ riêng lẻ để dễ dàng quản lý và tái sử dụng.\r\n    async componentDidMount() {\r\n        await this.getAllUsersFromReact();\r\n    }\r\n    getAllUsersFromReact = async () => {\r\n        let response = await getAllUsers('ALL');\r\n        if (response && response.errCode === 0) {\r\n            this.setState({\r\n                arrUsers: response.users\r\n            })\r\n        }\r\n    }\r\n    handleAddNewUser = () => {\r\n        this.setState({\r\n            isOpenModalUser: true,\r\n        })\r\n    }\r\n    toggleUserModal = () => {\r\n        this.setState({\r\n            isOpenModalUser: !this.state.isOpenModalUser,\r\n        })\r\n    }\r\n    toggleUserEditModal = () => {\r\n        this.setState({\r\n            isOpenModalEditUser: !this.state.isOpenModalEditUser,\r\n        })\r\n    }\r\n    createNewUser = async (data) => {\r\n        try {\r\n            let response = await createNewUserService(data);\r\n            if (response && response.errCode !== 0) {\r\n                alert(response.errMessage);\r\n            } else {\r\n                await this.getAllUsersFromReact(); //\r\n                this.setState({\r\n                    isOpenModalUser: false,\r\n                })\r\n                emitter.emit('EVENT_CLEAR_MODAL_DATA')\r\n            }\r\n        } catch (e) {\r\n            console.log(e);\r\n        }\r\n    }\r\n    handleDeleteUser = async (user) => {\r\n        try {\r\n            let res = await deleteUserService(user.id);\r\n            if (res && res.errCode === 0) {\r\n                await this.getAllUsersFromReact();\r\n            }\r\n            else {\r\n                alert(res.errMessage);\r\n            }\r\n        } catch (e) {\r\n\r\n        }\r\n    }\r\n    handleEditUser = (user) => {\r\n        this.setState({\r\n            isOpenModalEditUser: true,\r\n            userEdit: user\r\n        })\r\n    }\r\n    doEditUser = async (user) => {\r\n        try {\r\n            let res = await editUserService(user);\r\n            if (res && res.errCode === 0) {\r\n                this.setState({\r\n                    isOpenModalEditUser: false\r\n                })\r\n                await this.getAllUsersFromReact()\r\n\r\n            } else {\r\n                alert(res.errCode)\r\n            }\r\n        } catch (e) {\r\n\r\n        }\r\n\r\n\r\n    }\r\n    //toggle nghĩa là click ra bên ngoài, tác dụng là đóng hoặc mở modal\r\n    render() {\r\n\r\n        // console.log('check render', this.state)\r\n        //khi muốn render ra 1 thứ gì đó trong react, chúng ta phải có hàm return, và trong đó bắt buộc là 1 khối\r\n        let arrUsers = this.state.arrUsers;\r\n\r\n        return (\r\n            <div className=\"users-container\">\r\n\r\n                <ModalUser\r\n                    isOpen={this.state.isOpenModalUser}\r\n                    toggleFromParent={this.toggleUserModal}\r\n                    createNewUser={this.createNewUser} />\r\n                {this.state.isOpenModalEditUser &&\r\n                    <ModalEditUser\r\n                        isOpen={this.state.isOpenModalEditUser}\r\n                        toggleFromParent={this.toggleUserEditModal}\r\n                        currentUser={this.state.userEdit}\r\n                        editUser={this.doEditUser}\r\n                    />\r\n                }\r\n\r\n                <div className=\"title text-center\">Manage Users with BaoPhuc</div>\r\n                <div className=\"mx-1\">\r\n                    <button className=\"btn btn-primary px-3\"\r\n                        onClick={() => this.handleAddNewUser()}><i className=\"fa-solid fa-plus\"></i>Add new user</button>\r\n                </div>\r\n                <div className=\"users-table mt-3 mx-1\">\r\n                    <table id=\"customers\">\r\n                        <tbody>\r\n                            <tr>\r\n                                <th>Email</th>\r\n                                <th>First name</th>\r\n                                <th>Last name</th>\r\n                                <th>Address</th>\r\n                                <th>Actions</th>\r\n                            </tr>\r\n                            {arrUsers && arrUsers.map((item, index) => {\r\n                                // để duyệt 1 vòng lặp, ta có thể dùng function map(), bắt buộc phải return ra 1 thứ gì đó\r\n                                // thì function map() mới hoạt động được\r\n                                return (\r\n                                    <tr key={index}>\r\n                                        <td>{item.email}</td>\r\n                                        <td>{item.firstName}</td>\r\n                                        <td>{item.lastName}</td>\r\n                                        <td>{item.address}</td>\r\n                                        <td>\r\n                                            <button className=\"btn-edit\" onClick={() => this.handleEditUser(item)} ><i className=\"fa-solid fa-pencil\"></i></button>\r\n                                            <button className=\"btn-delete\" onClick={() => this.handleDeleteUser(item)}><i className=\"fa-solid fa-trash\"></i></button>\r\n                                        </td>\r\n                                    </tr>\r\n                                )\r\n                            })}\r\n                        </tbody>\r\n\r\n                    </table>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n    };\r\n};\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n    return {\r\n    };\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(UserManage);\r\n","C:\\Users\\1\\OneDrive\\Documents\\GitHub\\webcaytrongVNUA\\test\\webcaytrongVNUA\\webcaytrongVNUA\\React\\src\\store\\actions\\index.js",[],"C:\\Users\\1\\OneDrive\\Documents\\GitHub\\webcaytrongVNUA\\test\\webcaytrongVNUA\\webcaytrongVNUA\\React\\src\\utils\\KeyCodeUtils.js",[],"C:\\Users\\1\\OneDrive\\Documents\\GitHub\\webcaytrongVNUA\\test\\webcaytrongVNUA\\webcaytrongVNUA\\React\\src\\utils\\LanguageUtils.js",[],"C:\\Users\\1\\OneDrive\\Documents\\GitHub\\webcaytrongVNUA\\test\\webcaytrongVNUA\\webcaytrongVNUA\\React\\src\\utils\\constant.js",[],"C:\\Users\\1\\OneDrive\\Documents\\GitHub\\webcaytrongVNUA\\test\\webcaytrongVNUA\\webcaytrongVNUA\\React\\src\\utils\\CommonUtils.js",[],"C:\\Users\\1\\OneDrive\\Documents\\GitHub\\webcaytrongVNUA\\test\\webcaytrongVNUA\\webcaytrongVNUA\\React\\src\\utils\\ToastUtil.js",[],"C:\\Users\\1\\OneDrive\\Documents\\GitHub\\webcaytrongVNUA\\test\\webcaytrongVNUA\\webcaytrongVNUA\\React\\src\\store\\actions\\userActions.js",[],"C:\\Users\\1\\OneDrive\\Documents\\GitHub\\webcaytrongVNUA\\test\\webcaytrongVNUA\\webcaytrongVNUA\\React\\src\\store\\actions\\appActions.js",[],"C:\\Users\\1\\OneDrive\\Documents\\GitHub\\webcaytrongVNUA\\test\\webcaytrongVNUA\\webcaytrongVNUA\\React\\src\\services\\index.js",[],["285","286"],"C:\\Users\\1\\OneDrive\\Documents\\GitHub\\webcaytrongVNUA\\test\\webcaytrongVNUA\\webcaytrongVNUA\\React\\src\\services\\userService.js",[],"C:\\Users\\1\\OneDrive\\Documents\\GitHub\\webcaytrongVNUA\\test\\webcaytrongVNUA\\webcaytrongVNUA\\React\\src\\axios.js",["287","288"],"import axios from 'axios';\r\nimport _ from 'lodash';\r\n\r\n\r\nconst instance = axios.create({\r\n    baseURL: process.env.REACT_APP_BACKEND_URL,\r\n    // withCredentials: true\r\n});\r\n\r\n\r\ninstance.interceptors.response.use(\r\n    (response) => {\r\n        // Thrown error for request with OK status code\r\n        const { data } = response;\r\n        return response.data;\r\n\r\n    }\r\n);\r\n\r\nexport default instance;\r\n","C:\\Users\\1\\OneDrive\\Documents\\GitHub\\webcaytrongVNUA\\test\\webcaytrongVNUA\\webcaytrongVNUA\\React\\src\\config.js",["289"],"C:\\Users\\1\\OneDrive\\Documents\\GitHub\\webcaytrongVNUA\\test\\webcaytrongVNUA\\webcaytrongVNUA\\React\\src\\containers\\System\\ModalUser.js",["290"],"import React, { Component } from 'react';\r\nimport { FormattedMessage } from 'react-intl';\r\nimport { connect } from 'react-redux';\r\nimport './UserManage.scss';\r\nimport { emitter } from '../../utils/emitter';\r\nimport { Button, Modal, ModalHeader, ModalBody, ModalFooter } from 'reactstrap';\r\nclass ModalUser extends Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            email: '',\r\n            password: '',\r\n            firstName: '',\r\n            lastName: ' ',\r\n            address: ''\r\n        }\r\n        this.listenToEmitter();\r\n    }\r\n    listenToEmitter() {\r\n        emitter.on('EVENT_CLEAR_MODAL_DATA', () => {\r\n            this.setState({\r\n                email: '',\r\n                password: '',\r\n                firstName: '',\r\n                lastName: ' ',\r\n                address: ''\r\n            })\r\n        })\r\n    }\r\n\r\n    componentDidMount() {\r\n    }\r\n    toggle = () => {\r\n        this.props.toggleFromParent();\r\n    }\r\n    handleOnChangeInput = (event, id) => {\r\n        let copyState = { ...this.state };\r\n        copyState[id] = event.target.value;\r\n        this.setState({\r\n            ...copyState\r\n        });\r\n    }\r\n    checkValidateInput = () => {\r\n        let isValid = true;\r\n        let arrInput = ['email', 'password', 'firstName', 'lastName', 'address'];\r\n        for (let i = 0; i < arrInput.length; i++) {\r\n            if (!this.state[arrInput[i]]) {\r\n                isValid = false;\r\n                alert('Missing parameter: ' + arrInput[i]);\r\n                break;\r\n            }\r\n        }\r\n        return isValid;\r\n    }\r\n    handleAddNewUser = () => {\r\n        let isValid = this.checkValidateInput();\r\n        if (isValid === true) {\r\n            //gọi api để tạo modal\r\n            this.props.createNewUser(this.state, 'DONE!');\r\n        }\r\n    }\r\n    render() {\r\n        return (\r\n            <Modal\r\n                isOpen={this.props.isOpen}\r\n                toggle={() => { this.toggle() }}\r\n                className={'modal-user-container'}\r\n                size=\"lg\">\r\n                <ModalHeader toggle={() => { this.toggle() }}>ADD NEW USER:</ModalHeader>\r\n                <ModalBody>\r\n\r\n                    <div className=\"modal-user-body\">\r\n                        <div className=\"input-container \">\r\n                            <label>Email</label>\r\n                            <input type=\"text\"\r\n                                onChange={(event) => { this.handleOnChangeInput(event, \"email\") }}\r\n                                value={this.state.email}></input>\r\n                        </div>\r\n                        <div className=\"input-container \">\r\n                            <label>Password</label>\r\n                            <input type=\"password\"\r\n                                onChange={(event) => { this.handleOnChangeInput(event, \"password\") }}\r\n                                value={this.state.password}\r\n                            ></input>\r\n                        </div>\r\n                        <div className=\"input-container \">\r\n                            <label>First Name</label>\r\n                            <input type=\"text\"\r\n                                onChange={(event) => { this.handleOnChangeInput(event, \"firstName\") }}\r\n                                value={this.state.firstName}></input>\r\n                        </div>\r\n                        <div className=\"input-container \">\r\n                            <label>Last Name</label>\r\n                            <input type=\"text\"\r\n                                onChange={(event) => { this.handleOnChangeInput(event, \"lastName\") }}\r\n                                value={this.state.lastName}></input>\r\n                        </div>\r\n                        <div className=\"input-container max-width-input\">\r\n                            <label>Address</label>\r\n                            <input type=\"text\"\r\n                                onChange={(event) => { this.handleOnChangeInput(event, \"address\") }}\r\n                                value={this.state.address}></input>\r\n                        </div>\r\n                    </div>\r\n\r\n\r\n                </ModalBody>\r\n                <ModalFooter>\r\n                    <Button color=\"primary\" className=\"px-3\" onClick={() => { this.handleAddNewUser() }}>Add new user</Button>\r\n                    <Button color=\"secondary\" className=\"px-3\" onClick={() => { this.toggle() }}>Cancel</Button>\r\n                </ModalFooter>\r\n            </Modal>\r\n        )\r\n    }\r\n\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n    };\r\n};\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n    return {\r\n    };\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(ModalUser);\r\n\r\n\r\n\r\n\r\n","C:\\Users\\1\\OneDrive\\Documents\\GitHub\\webcaytrongVNUA\\test\\webcaytrongVNUA\\webcaytrongVNUA\\React\\src\\utils\\emitter.js",[],"C:\\Users\\1\\OneDrive\\Documents\\GitHub\\webcaytrongVNUA\\test\\webcaytrongVNUA\\webcaytrongVNUA\\React\\src\\containers\\System\\ModalEditUser.js",["291","292"],"import React, { Component } from 'react';\r\nimport { FormattedMessage } from 'react-intl';\r\nimport { connect } from 'react-redux';\r\nimport './UserManage.scss';\r\nimport { emitter } from '../../utils/emitter';\r\nimport _ from 'lodash';\r\n\r\n//lodash hỗ trợ ta kiểm tra và thao tác với mảng dễ dàng hơn\r\nimport { Button, Modal, ModalHeader, ModalBody, ModalFooter } from 'reactstrap';\r\nclass ModalEditUser extends Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            id: '',\r\n            email: '',\r\n            password: '',\r\n            firstName: '',\r\n            lastName: ' ',\r\n            address: ''\r\n        }\r\n\r\n    }\r\n    listenToEmitter() {\r\n        emitter.on('EVENT_CLEAR_MODAL_DATA', () => {\r\n            this.setState({\r\n                id: '',\r\n                email: '',\r\n                password: '',\r\n                firstName: '',\r\n                lastName: ' ',\r\n                address: ''\r\n            })\r\n        })\r\n    }\r\n\r\n    componentDidMount() {\r\n        let user = this.props.currentUser;\r\n        if (user && !_.isEmpty(user)) {\r\n            {\r\n                this.setState({\r\n                    id: user.id,\r\n                    email: user.email,\r\n                    password: 'hardcode',\r\n                    firstName: user.firstName,\r\n                    lastName: user.lastName,\r\n                    address: user.address\r\n                })\r\n            }\r\n        }\r\n    }\r\n    toggle = () => {\r\n        this.props.toggleFromParent();\r\n    }\r\n    handleOnChangeInput = (event, id) => {\r\n        let copyState = { ...this.state };\r\n        copyState[id] = event.target.value;\r\n        this.setState({\r\n            ...copyState\r\n        });\r\n    }\r\n    checkValidateInput = () => {\r\n        let isValid = true;\r\n        let arrInput = ['email', 'password', 'firstName', 'lastName', 'address'];\r\n        for (let i = 0; i < arrInput.length; i++) {\r\n            if (!this.state[arrInput[i]]) {\r\n                isValid = false;\r\n                alert('Missing parameter: ' + arrInput[i]);\r\n                break;\r\n            }\r\n        }\r\n        return isValid;\r\n    }\r\n    handleSaveUser = () => {\r\n        let isValid = this.checkValidateInput();\r\n        if (isValid === true) {\r\n            //gọi api để tạo modal\r\n            this.props.editUser(this.state);\r\n        }\r\n    }\r\n    render() {\r\n        return (\r\n            <Modal\r\n                isOpen={this.props.isOpen}\r\n                toggle={() => { this.toggle() }}\r\n                className={'modal-user-container'}\r\n                size=\"lg\">\r\n                <ModalHeader toggle={() => { this.toggle() }}>EDIT USER:</ModalHeader>\r\n                <ModalBody>\r\n\r\n                    <div className=\"modal-user-body\">\r\n                        <div className=\"input-container \">\r\n                            <label>Email</label>\r\n                            <input type=\"text\"\r\n                                onChange={(event) => { this.handleOnChangeInput(event, \"email\") }}\r\n                                value={this.state.email}\r\n                                disabled>\r\n                            </input>\r\n                        </div>\r\n                        <div className=\"input-container \">\r\n                            <label>Password</label>\r\n                            <input type=\"password\"\r\n                                onChange={(event) => { this.handleOnChangeInput(event, \"password\") }}\r\n                                value={this.state.password}\r\n                                disabled\r\n                            ></input>\r\n                        </div>\r\n                        <div className=\"input-container \">\r\n                            <label>First Name</label>\r\n                            <input type=\"text\"\r\n                                onChange={(event) => { this.handleOnChangeInput(event, \"firstName\") }}\r\n                                value={this.state.firstName}></input>\r\n                        </div>\r\n                        <div className=\"input-container \">\r\n                            <label>Last Name</label>\r\n                            <input type=\"text\"\r\n                                onChange={(event) => { this.handleOnChangeInput(event, \"lastName\") }}\r\n                                value={this.state.lastName}></input>\r\n                        </div>\r\n                        <div className=\"input-container max-width-input\">\r\n                            <label>Address</label>\r\n                            <input type=\"text\"\r\n                                onChange={(event) => { this.handleOnChangeInput(event, \"address\") }}\r\n                                value={this.state.address}></input>\r\n                        </div>\r\n                    </div>\r\n\r\n\r\n                </ModalBody>\r\n                <ModalFooter>\r\n                    <Button color=\"primary\" className=\"px-3\" onClick={() => { this.handleSaveUser() }}>Save Changes</Button>\r\n                    <Button color=\"secondary\" className=\"px-3\" onClick={() => { this.toggle() }}>Cancel</Button>\r\n                </ModalFooter>\r\n            </Modal>\r\n        )\r\n    }\r\n\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n    };\r\n};\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n    return {\r\n    };\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(ModalEditUser);\r\n\r\n\r\n\r\n\r\n","C:\\Users\\1\\OneDrive\\Documents\\GitHub\\webcaytrongVNUA\\test\\webcaytrongVNUA\\webcaytrongVNUA\\React\\src\\containers\\HomePage\\HomePage.js",["293"],"import React, { Component } from 'react';\r\nimport { Redirect } from 'react-router-dom';\r\nimport { connect } from 'react-redux';\r\nimport HomeHeader from './HomeHeader';\r\nimport Specialty from './Section/Specialty';\r\nimport MedicalFacility from './Section/MedicalFacility';\r\nimport OutStandingDoctor from './Section/OutStandingDoctor';\r\nimport HandBook from './Section/HandBook';\r\nimport About from './Section/About';\r\nimport HomeFooter from './HomeFooter';\r\nimport './HomePage.scss';\r\nimport \"slick-carousel/slick/slick.css\";\r\nimport \"slick-carousel/slick/slick-theme.css\";\r\nclass HomePage extends Component {\r\n\r\n    render() {\r\n        let settings = {\r\n            dots: false,\r\n            infinite: false,\r\n            speed: 500,\r\n            slidesToShow: 4,\r\n            slidesToScroll: 1,\r\n        };\r\n\r\n        return (\r\n            <div>\r\n                <HomeHeader isShowBanner={true} />\r\n                {/* đặt giá trị mặc định cho isShowBanner của HomeHeader là true */}\r\n                <Specialty\r\n                    settings={settings}>\r\n                </Specialty>\r\n                <MedicalFacility settings={settings}></MedicalFacility>\r\n                <OutStandingDoctor\r\n                    settings={settings} />\r\n                <HandBook settings={settings}></HandBook>\r\n                <About />\r\n                <HomeFooter ></HomeFooter>\r\n            </div>\r\n        );\r\n    }\r\n\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        isLoggedIn: state.user.isLoggedIn,\r\n        language: state.app.language,\r\n    };\r\n};\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n    return {\r\n    };\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(HomePage);\r\n","C:\\Users\\1\\OneDrive\\Documents\\GitHub\\webcaytrongVNUA\\test\\webcaytrongVNUA\\webcaytrongVNUA\\React\\src\\containers\\HomePage\\HomeHeader.js",["294","295"],"import React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport './HomeHeader.scss';\r\nimport { LANGUAGES } from '../../utils';\r\nimport * as actions from \"../../store/actions\";\r\nimport { FormattedMessage } from 'react-intl';\r\nimport { withRouter } from 'react-router';\r\nclass HomeHeader extends Component {\r\n    changeLanguage = (language) => {\r\n        this.props.changeLanguageAppRedux(language);\r\n    }\r\n    returnToHome = () => {\r\n        if (this.props.history) {\r\n            this.props.history.push(`/home`)\r\n        }\r\n    }\r\n    goToLogin = () => {\r\n        if (this.props.history) {\r\n            this.props.history.push(`/login`)\r\n        }\r\n    }\r\n    componentDidMount() {\r\n        let { userInfo } = this.props;\r\n       \r\n    }\r\n    render() {\r\n        let language = this.props.language;\r\n        console.log(\"check language: \", language);\r\n        const {  userInfo } = this.props;\r\n        return (\r\n            <React.Fragment>\r\n\r\n                <div className=\"home-header-container\">\r\n                    <div className=\"home-header-content\">\r\n                        <div className=\"left-content\">\r\n                            <i className=\"fa-solid fa-bars-staggered\"></i>\r\n\r\n                            <img className=\"header-logo\" onClick={() => this.returnToHome()}></img>\r\n                        </div>\r\n                        <div className=\"center-content\">\r\n                            <div className=\"child-content\">\r\n                                <div><b><FormattedMessage id=\"homeheader.speciality\" /></b></div>\r\n                                <div className=\"sub-title\"> <FormattedMessage id=\"homeheader.searchdoctor\" /></div>\r\n                            </div>\r\n                            <div className=\"child-content\">\r\n                                <div><b> <FormattedMessage id=\"homeheader.health-facility\" /></b></div>\r\n                                <div className=\"sub-title\"> <FormattedMessage id=\"homeheader.select-room\" /></div>\r\n                            </div>\r\n                            <div className=\"child-content\">\r\n                                <div><b><FormattedMessage id=\"homeheader.doctor\" /></b></div>\r\n                                <div className=\"sub-title\"> <FormattedMessage id=\"homeheader.select-doctor\" /> </div>\r\n                            </div>\r\n                            <div className=\"child-content\">\r\n                                <div><b><FormattedMessage id=\"homeheader.fee\" /></b></div>\r\n                                <div className=\"sub-title\"><FormattedMessage id=\"homeheader.check-health\" /></div>\r\n                            </div>\r\n                            <div className=\" child-content\" onClick={() => this.goToLogin()}>\r\n                                <div><b><FormattedMessage id=\"homeheader.manage-account\" /></b></div>\r\n                                <div className=\"support\">\r\n                                    <FormattedMessage id=\"homeheader.welcome\"></FormattedMessage>,\r\n                                    {userInfo && userInfo.firstName && userInfo.lastName ? ' ' + userInfo.firstName + ' ' + userInfo.lastName : ' '} !\r\n                                    {/* Khi có thông tin của userInfo với 2 biến đầy đủ như kia thì ta in ra, không thì trả về giá trị rỗng */}\r\n                                </div>\r\n\r\n\r\n\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"right-content\">\r\n                            <div className=\"language\">\r\n                                <div className={language === LANGUAGES.VI ? 'language-vi active' : 'language-vi'}>\r\n                                    <span onClick={() => this.changeLanguage(LANGUAGES.VI)}>VN</span>\r\n                                </div>\r\n                                <div className={language === LANGUAGES.EN ? 'language-en active' : 'language-en'}>\r\n                                    <span onClick={() => this.changeLanguage(LANGUAGES.EN)}>EN\r\n                                    </span>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                       \r\n                       \r\n                    </div>\r\n\r\n                </div>\r\n                {this.props.isShowBanner === true &&\r\n                    <div className=\"home-header-banner\">\r\n                        <div className=\"content-up\">\r\n                            <div className=\"title1\"><FormattedMessage id=\"banner.title1\" /></div>\r\n                            <div className=\"title2\"><FormattedMessage id=\"banner.title2\" /></div>\r\n                            <div className=\"search\"><i className=\"fa-solid fa-magnifying-glass\"></i>\r\n                                <input type=\"text\" placeholder='Search...'></input></div>\r\n                        </div>\r\n                        <div className=\"content-down\">\r\n                            <div className=\"options\">\r\n                                <div className=\"option-child\">\r\n                                    <div className=\"icon-child\"><i className=\"fa-solid fa-tree\"></i></div>\r\n                                    <div className=\"text-child\"><FormattedMessage id=\"banner.child1\" /></div>\r\n                                </div>\r\n                                <div className=\"option-child\">\r\n                                    <div className=\"icon-child\"><i className=\"fa-solid fa-mobile-screen-button\"></i></div>\r\n                                    <div className=\"text-child\"><FormattedMessage id=\"banner.child2\" /></div>\r\n                                </div>\r\n                                <div className=\"option-child\">\r\n                                    <div className=\"icon-child\"><i className=\"fa-solid fa-book-medical\"></i></div>\r\n                                    <div className=\"text-child\"><FormattedMessage id=\"banner.child3\" /></div>\r\n                                </div>\r\n                                <div className=\"option-child\">\r\n                                    <div className=\"icon-child\"><i className=\"fa-solid fa-mosquito\"></i></div>\r\n                                    <div className=\"text-child\"><FormattedMessage id=\"banner.child4\" /></div>\r\n                                </div>\r\n                                <div className=\"option-child\">\r\n                                    <div className=\"icon-child\"><i className=\"fa-brands fa-pagelines\"></i></div>\r\n                                    <div className=\"text-child\"><FormattedMessage id=\"banner.child5\" /></div>\r\n                                </div>\r\n                                <div className=\"option-child\">\r\n                                    <div className=\"icon-child\"><i className=\"fa-solid fa-sun-plant-wilt\"></i></div>\r\n                                    <div className=\"text-child\"><FormattedMessage id=\"banner.child6\" /></div>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n\r\n                    </div>\r\n                }\r\n            </React.Fragment>\r\n\r\n        )\r\n    }\r\n}\r\nconst mapStateToProps = state => {\r\n    return {\r\n        isLoggedIn: state.user.isLoggedIn,\r\n        language: state.app.language,\r\n        userInfo: state.user.userInfo\r\n    };\r\n};\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n    return {\r\n        processLogout: () => dispatch(actions.processLogout()),\r\n        changeLanguageAppRedux: (language) => dispatch(actions.changeLanguageApp(language)),\r\n    };\r\n};\r\n\r\nexport default withRouter(connect(mapStateToProps, mapDispatchToProps)(HomeHeader));","C:\\Users\\1\\OneDrive\\Documents\\GitHub\\webcaytrongVNUA\\test\\webcaytrongVNUA\\webcaytrongVNUA\\React\\src\\containers\\HomePage\\Section\\Specialty.js",[],"C:\\Users\\1\\OneDrive\\Documents\\GitHub\\webcaytrongVNUA\\test\\webcaytrongVNUA\\webcaytrongVNUA\\React\\src\\containers\\HomePage\\Section\\MedicalFacility.js",[],"C:\\Users\\1\\OneDrive\\Documents\\GitHub\\webcaytrongVNUA\\test\\webcaytrongVNUA\\webcaytrongVNUA\\React\\src\\containers\\HomePage\\Section\\OutStandingDoctor.js",[],"C:\\Users\\1\\OneDrive\\Documents\\GitHub\\webcaytrongVNUA\\test\\webcaytrongVNUA\\webcaytrongVNUA\\React\\src\\containers\\HomePage\\Section\\HandBook.js",[],"C:\\Users\\1\\OneDrive\\Documents\\GitHub\\webcaytrongVNUA\\test\\webcaytrongVNUA\\webcaytrongVNUA\\React\\src\\containers\\HomePage\\Section\\About.js",[],"C:\\Users\\1\\OneDrive\\Documents\\GitHub\\webcaytrongVNUA\\test\\webcaytrongVNUA\\webcaytrongVNUA\\React\\src\\containers\\HomePage\\HomeFooter.js",[],"C:\\Users\\1\\OneDrive\\Documents\\GitHub\\webcaytrongVNUA\\test\\webcaytrongVNUA\\webcaytrongVNUA\\React\\src\\containers\\System\\UserRedux.js",["296","297"],"import React, { Component } from 'react';\r\nimport { FormattedMessage } from 'react-intl';\r\nimport { connect } from 'react-redux';\r\nimport { LANGUAGES, CRUD_ACTIONS, CommonUtils } from '../../utils';\r\nimport './UserRedux.scss';\r\nimport TableManageUser from './TableManageUser';\r\nimport * as actions from '../../store/actions';\r\nimport Lightbox from 'react-image-lightbox';\r\nimport 'react-image-lightbox/style.css'; // This only needs to be imported once in your app\r\nimport { isBuffer } from 'lodash';\r\nclass UserRedux extends Component {\r\n\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      genderArr: [],\r\n      positionArr: [],\r\n      roleIdArr: [],\r\n      isOpen: false,\r\n      previewImgURL: '',\r\n\r\n      email: '',\r\n      password: '',\r\n      firstName: '',\r\n      lastName: '',\r\n      phoneNumber: '',\r\n      address: '',\r\n      gender: '',\r\n      position: '',\r\n      role: '',\r\n      avatar: '',\r\n      action: '',\r\n      userEditId: '',\r\n    };\r\n  }\r\n\r\n  async componentDidMount() {\r\n\r\n    this.props.getGenderStart();\r\n    this.props.getPositionStart();\r\n    this.props.getRoleIdStart();\r\n  }\r\n  componentDidUpdate(prevProps, prevState, snapshot) {\r\n    if (prevProps.genderRedux !== this.props.genderRedux\r\n\r\n    ) {\r\n      let arrGenders = this.props.genderRedux;\r\n      this.setState({\r\n        genderArr: arrGenders,\r\n        gender: arrGenders && arrGenders.length ? arrGenders[0].keyMap : ''\r\n\r\n      })\r\n    }\r\n    if (prevProps.positionRedux !== this.props.positionRedux) {\r\n      let arrPositions = this.props.positionRedux;\r\n      this.setState({\r\n        positionArr: arrPositions,\r\n        position: arrPositions && arrPositions.length > 0 ? arrPositions[0].keyMap : '',\r\n      })\r\n    }\r\n    if (prevProps.roleIdRedux !== this.props.roleIdRedux) {\r\n      let arrRoles = this.props.roleIdRedux;\r\n      this.setState({\r\n        roleIdArr: arrRoles,\r\n        role: arrRoles && arrRoles.length > 0 ? arrRoles[0].keyMap : ''\r\n      })\r\n    }\r\n    if (prevProps.listUsers !== this.props.listUsers) {\r\n      let arrGenders = this.props.genderRedux;\r\n      let arrRoles = this.props.roleIdRedux;\r\n      let arrPositions = this.props.positionRedux;\r\n      this.setState({\r\n        email: '',\r\n        password: '',\r\n        firstName: '',\r\n        lastName: '',\r\n        phoneNumber: '',\r\n        address: '',\r\n        gender: arrGenders && arrGenders.length > 0 ? arrGenders[0].keyMap : '',\r\n        position: arrPositions && arrPositions.length > 0 ? arrPositions[0].keyMap : '',\r\n        role: arrRoles && arrRoles.length > 0 ? arrRoles[0].keyMap : '',\r\n        avatar: '',\r\n        action: CRUD_ACTIONS.CREATE,\r\n        previewImgURL: ''\r\n      })\r\n    }\r\n  }\r\n  handleOnChangeImage = async (event) => {\r\n    let data = event.target.files;\r\n    let file = data[0];\r\n    if (file) {\r\n      let base64 = await CommonUtils.getBase64(file);\r\n      let objectUrl = URL.createObjectURL(file);\r\n      this.setState({\r\n        previewImgURL: objectUrl,\r\n        avatar: base64,\r\n      })\r\n    }\r\n  }\r\n  openPreviewImage = () => {\r\n    if (!this.state.previewImgURL) return;\r\n    this.setState({\r\n      isOpen: true\r\n    })\r\n  }\r\n  handleSaveUser = () => {\r\n    let isValid = this.checkValidateInput();\r\n    if (isValid === false) return;\r\n    let { action } = this.state;\r\n    if (action === CRUD_ACTIONS.CREATE) {\r\n      this.props.createNewUser({\r\n        email: this.state.email,\r\n        password: this.state.password,\r\n        firstName: this.state.firstName,\r\n        lastName: this.state.lastName,\r\n        address: this.state.address,\r\n        phoneNumber: this.state.phoneNumber,\r\n        gender: this.state.gender,\r\n        roleId: this.state.role,\r\n        positionId: this.state.position,\r\n        avatar: this.state.avatar\r\n      })\r\n    }\r\n    if (action === CRUD_ACTIONS.EDIT) {\r\n      this.props.editUserRedux({\r\n        id: this.state.userEditId,\r\n        email: this.state.email,\r\n        password: this.state.password,\r\n        firstName: this.state.firstName,\r\n        lastName: this.state.lastName,\r\n        address: this.state.address,\r\n        phoneNumber: this.state.phoneNumber,\r\n        gender: this.state.gender,\r\n        roleId: this.state.role,\r\n        positionId: this.state.position,\r\n        avatar: this.state.avatar\r\n      })\r\n    }\r\n\r\n\r\n  }\r\n  checkValidateInput = () => {\r\n    let isValid = true;\r\n    let arrCheck = ['email', 'password', 'firstName', 'lastName', 'address', 'phoneNumber']\r\n    for (let i = 0; i < arrCheck.length; i++) {\r\n      if (!this.state[arrCheck[i]]) {\r\n        isValid = false;\r\n        alert('This input is required: ' + arrCheck[i]);\r\n        break;\r\n      }\r\n    }\r\n    return isValid;\r\n  }\r\n  onChangeInput = (event, id) => {\r\n    let copyState = { ...this.state }\r\n    copyState[id] = event.target.value;\r\n    this.setState({\r\n      ...copyState,\r\n    })\r\n  }\r\n\r\n  handleEditUserFromParent = (user) => {\r\n    let imageBase64 = '';\r\n    if (user.image) {\r\n      imageBase64 = new Buffer(user.image, 'base64').toString('binary');\r\n      //Buffer cung cấp cách xử lý dữ liệu dạng nhị phân, \r\n      //câu lệnh trên xử lý dữ liệu BLOB (được mã hóa là base64) sang dữ liệu binary \r\n    }\r\n    this.setState({\r\n      email: user.email,\r\n      password: '????????????????????????????????????????',\r\n      firstName: user.firstName,\r\n      lastName: user.lastName,\r\n      phoneNumber: user.phoneNumber,\r\n      address: user.address,\r\n      gender: user.gender,\r\n      role: user.roleId,\r\n      position: user.positionId,\r\n      avatar: '',\r\n      previewImgURL: imageBase64,\r\n      action: CRUD_ACTIONS.EDIT,\r\n      userEditId: user.id\r\n    })\r\n  }\r\n  render() {\r\n    let genders = this.state.genderArr;\r\n    let positions = this.state.positionArr;\r\n    let roleIds = this.state.roleIdArr;\r\n    let isGetGenders = this.props.isLoadingGenders;\r\n    let language = this.props.language;\r\n    let { email, password, firstName, lastName, phoneNumber, address, gender, position, role\r\n      , avatar } = this.state;\r\n    //đây là cách viết của ES7\r\n    return (\r\n\r\n      <div className=\"user-redux-container\" >\r\n        <div className=\"title\">\r\n          <FormattedMessage id=\"create-user.title\" />\r\n        </div>\r\n        <div className=\"user-redux-body\">\r\n          <div className=\"container\">\r\n            <div className=\"row\">\r\n              <div className=\"col-12\">\r\n                {isGetGenders === true ? 'Loading...' : ''}\r\n              </div>\r\n              <div className=\"col-md-3 mb-3\">\r\n                <label htmlFor=\"validationServerUsername\"> <FormattedMessage id=\"create-user.email\" /></label>\r\n                <div className=\"input-group\">\r\n                  <div className=\"input-group-prepend\">\r\n                    <span className=\"input-group-text\" id=\"inputGroupPrepend3\">@</span>\r\n                  </div>\r\n                  <input type=\"email\" className=\"form-control\" id=\"validationServerUsername\" placeholder=\"...\" aria-describedby=\"inputGroupPrepend3\" required\r\n                    value={email}\r\n                    onChange={(event) => { this.onChangeInput(event, 'email') }}\r\n                    disabled={this.state.action === CRUD_ACTIONS.EDIT ? true : false} />\r\n\r\n                </div>\r\n              </div>\r\n              <div className=\"col-md-3 mb-3\">\r\n                <label htmlFor=\"validationServerUsername\"> <FormattedMessage id=\"create-user.password\" /></label>\r\n                <div className=\"input-group\">\r\n\r\n                  <input type=\"password\" className=\"form-control \" id=\"validationServerUsername\" placeholder=\"...\"\r\n                    aria-describedby=\"inputGroupPrepend3\" required\r\n                    value={password}\r\n                    onChange={(event) => { this.onChangeInput(event, 'password') }}\r\n                    disabled={this.state.action === CRUD_ACTIONS.EDIT ? true : false} />\r\n\r\n                </div>\r\n              </div>\r\n              <div className=\"col-md-3 mb-3\">\r\n                <label htmlFor=\"validationServer01\"> <FormattedMessage id=\"create-user.firstname\" /></label>\r\n                <input type=\"text\" className=\"form-control \" id=\"validationServer01\" placeholder=\"...\" required\r\n                  value={firstName}\r\n                  onChange={(event) => { this.onChangeInput(event, 'firstName') }} />\r\n\r\n              </div>\r\n              <div className=\"col-md-3 mb-3\">\r\n                <label htmlFor=\"validationServer02\"> <FormattedMessage id=\"create-user.lastname\" /></label>\r\n                <input type=\"text\" className=\"form-control \" id=\"validationServer02\" placeholder=\"...\" required\r\n                  value={lastName}\r\n                  onChange={(event) => { this.onChangeInput(event, 'lastName') }} />\r\n\r\n              </div>\r\n\r\n            </div>\r\n            <div className=\"row\">\r\n              <div className=\"form-group col-md-3 mb-3\">\r\n                <label htmlFor=\"validationServerUsername\"> <FormattedMessage id=\"create-user.roleid\" /></label>\r\n                <select id=\"inputState\" className=\"form-control\"\r\n\r\n                  onChange={(event) => { this.onChangeInput(event, 'role') }}\r\n                  value={role}>\r\n                  {roleIds && roleIds.length > 0 && roleIds.map((item, index) => {\r\n                    return (\r\n                      <option key={index} value={item.keyMap}>\r\n                        {language === LANGUAGES.VI ? item.valueVi : item.valueEn}</option>\r\n                    )\r\n                  })\r\n                  }\r\n                </select>\r\n              </div>\r\n              <div className=\"form-group col-md-3 mb-3\">\r\n                <label htmlFor=\"validationServerUsername\"> <FormattedMessage id=\"create-user.position\" /></label>\r\n\r\n                <select id=\"inputState\" className=\"form-control\"\r\n                  onChange={(event) => { this.onChangeInput(event, 'position') }}\r\n                  value={position}>\r\n                  {positions && positions.length > 0 && positions.map((item, index) => {\r\n                    return (\r\n                      <option key={index} value={item.keyMap}>\r\n                        {language === LANGUAGES.VI ? item.valueVi : item.valueEn}</option>\r\n                    )\r\n                  })\r\n                  }\r\n                </select>\r\n\r\n              </div>\r\n              <div className=\"form-group col-md-3 mb-3\">\r\n                <label htmlFor=\"validationServer01\"> <FormattedMessage id=\"create-user.gender\" /></label>\r\n\r\n                <select id=\"inputState\" className=\"form-control\"\r\n                  onChange={(event) => { this.onChangeInput(event, 'gender') }}\r\n                  value={gender}>\r\n                  {genders && genders.length > 0 && genders.map((item, index) => {\r\n                    return (\r\n                      <option key={index} value={item.keyMap}>\r\n                        {language === LANGUAGES.VI ? item.valueVi : item.valueEn}</option>\r\n                    )\r\n                  })\r\n                  }\r\n\r\n                </select>\r\n\r\n              </div>\r\n              <div className=\"col-md-3 mb-3\">\r\n                <label htmlFor=\"validationServer04\"> <FormattedMessage id=\"create-user.phonenumber\" /></label>\r\n                <input type=\"text\" className=\"form-control \" id=\"validationServer04\" placeholder=\"...\" required\r\n                  value={phoneNumber}\r\n                  onChange={(event) => { this.onChangeInput(event, 'phoneNumber') }} />\r\n\r\n              </div>\r\n\r\n\r\n            </div>\r\n            <div className=\"row\">\r\n              <div className=\"col-md-9 mb-3\">\r\n                <label htmlFor=\"validationServer03\"> <FormattedMessage id=\"create-user.address\" /></label>\r\n                <input type=\"text\" className=\"form-control \" id=\"validationServer03\" placeholder=\"...\" required\r\n                  value={address}\r\n                  onChange={(event) => { this.onChangeInput(event, 'address') }} />\r\n\r\n              </div>\r\n              <div className=\"col-md-3 mb-3\">\r\n                <label htmlFor=\"validationServer02\"> <FormattedMessage id=\"create-user.image\" /></label>\r\n                <div className=\"preview-img-container\">\r\n                  <input id=\"previewImg\" type=\"file\" hidden\r\n                    onChange={(event) => this.handleOnChangeImage(event)} />\r\n                  <label className=\"label-upload\" htmlFor=\"previewImg\">Upload<i className=\"fa-solid fa-upload\"></i></label>\r\n                  <div className=\"preview-image\" style={{ backgroundImage: `url(${this.state.previewImgURL})` }}\r\n                    onClick={() => this.openPreviewImage()}\r\n                  >\r\n\r\n                  </div>\r\n                </div>\r\n\r\n\r\n              </div>\r\n\r\n            </div>\r\n\r\n\r\n            <div className=\"form-group\">\r\n              <div className=\"form-check\">\r\n                <input className=\"form-check-input is-invalid\" type=\"checkbox\" value=\"\" id=\"invalidCheck3\" required />\r\n                <label className=\"form-check-label\" htmlFor=\"invalidCheck3\">\r\n                  <FormattedMessage id=\"create-user.agree\" />\r\n                </label>\r\n                <div className=\"invalid-feedback\">\r\n                  <FormattedMessage id=\"create-user.confirm\" />\r\n                </div>\r\n              </div>\r\n            </div>\r\n            <div className=\"col-12 my-3\">\r\n              <button className={this.state.action === CRUD_ACTIONS.EDIT ? \"btn btn-warning\" : \"btn btn-primary\"} type=\"submit\"\r\n                onClick={() => this.handleSaveUser()}>\r\n                {this.state.action === CRUD_ACTIONS.EDIT ?\r\n                  <FormattedMessage id=\"manage-user.edit\"></FormattedMessage>\r\n                  : <FormattedMessage id=\"manage-user.save\"></FormattedMessage>}\r\n                {/* <FormattedMessage id=\"create-user.submit\"/> */}\r\n              </button>\r\n            </div>\r\n            <div className=\"col-12 mb-5\">\r\n              <TableManageUser\r\n                handleEditUserFromParentKey={this.handleEditUserFromParent}\r\n                action={this.state.action} />\r\n            </div>\r\n\r\n          </div>\r\n        </div>\r\n        {this.state.isOpen === true &&\r\n          <Lightbox\r\n            mainSrc={this.state.previewImgURL}\r\n            onCloseRequest={() => this.setState({ isOpen: false })} />}\r\n      </div>\r\n\r\n    )\r\n  }\r\n\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n  return {\r\n    language: state.app.language,\r\n    genderRedux: state.admin.genders,\r\n    positionRedux: state.admin.positions,\r\n    roleIdRedux: state.admin.roleIds,\r\n    isLoadingGenders: state.admin.loadingGenders,\r\n    listUsers: state.admin.users\r\n  };\r\n};\r\n//những cái biến state ở trên hàm mapStateToProps được khai báo trùng với các biến ở trên file này, không cần khai báo ở file\r\n//khác và có thể sử dụng ở file khác, vế trái là ta tự khai báo\r\nconst mapDispatchToProps = dispatch => {\r\n  return {\r\n    getGenderStart: () => dispatch(actions.fetchGenderStart()),\r\n    getPositionStart: () => dispatch(actions.fetchPositionStart()),\r\n    getRoleIdStart: () => dispatch(actions.fetchRoleIdStart()),\r\n    createNewUser: (data) => dispatch(actions.createNewUser(data)),\r\n    fetchUserRedux: () => dispatch(actions.fetchAllUsersStart()),\r\n    editUserRedux: (data) => dispatch(actions.editUser(data))\r\n  };\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(UserRedux);\r\n","C:\\Users\\1\\OneDrive\\Documents\\GitHub\\webcaytrongVNUA\\test\\webcaytrongVNUA\\webcaytrongVNUA\\React\\src\\store\\actions\\adminActions.js",[],"C:\\Users\\1\\OneDrive\\Documents\\GitHub\\webcaytrongVNUA\\test\\webcaytrongVNUA\\webcaytrongVNUA\\React\\src\\store\\reducers\\adminReducer.js",[],"C:\\Users\\1\\OneDrive\\Documents\\GitHub\\webcaytrongVNUA\\test\\webcaytrongVNUA\\webcaytrongVNUA\\React\\src\\containers\\System\\TableManageUser.js",["298"],"import React, { Component } from 'react';\r\nimport { FormattedMessage } from 'react-intl';\r\nimport { connect } from 'react-redux';\r\nimport './TableManageUser.scss';\r\nimport * as actions from \"../../store/actions\";\r\nimport MarkdownIt from 'markdown-it';\r\nimport MdEditor from 'react-markdown-editor-lite';\r\nimport 'react-markdown-editor-lite/lib/index.css';\r\nconst mdParser = new MarkdownIt();\r\nfunction handleEditorChange({ html, text }) {\r\n    console.log('check edit change', html, text);\r\n}\r\n\r\n// nếu muốn import 1 function thì ta dùng dấu ngoặc nhọn\r\nclass TableManageUser extends Component {\r\n    // PROPS stands for properties and is being used for passing data from one component to another.\r\n    // But the important part here is that data with props are being passed in a uni-directional flow. ( one way from parent to child)\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            usersRedux: []\r\n        }\r\n    }\r\n    //để lưu giá trị của 1 biến components, ta dùng state\r\n    //Component là một block code độc lập để phân chia các UI (giao diện người dùng) thành các phân nhỏ riêng lẻ để dễ dàng quản lý và tái sử dụng.\r\n    componentDidMount() {\r\n        this.props.fetchUserRedux();\r\n    }\r\n\r\n    componentDidUpdate(prevProps, prevState, snapshot) {\r\n        if (prevProps.listUsers !== this.props.listUsers) {\r\n            this.setState({\r\n                usersRedux: this.props.listUsers,\r\n            })\r\n        }\r\n    }\r\n\r\n    handleDeleteUser = (user) => {\r\n        this.props.deleteUserRedux(user.id);\r\n    }\r\n\r\n    handleEditUser = (user) => {\r\n        this.props.handleEditUserFromParentKey(user)\r\n    }\r\n    render() {\r\n\r\n\r\n        //khi muốn render ra 1 thứ gì đó trong react, chúng ta phải có hàm return, và trong đó bắt buộc là 1 khối\r\n        let arrUsers = this.state.usersRedux;\r\n\r\n        return (\r\n            <React.Fragment>\r\n                <div className=\"users-container\">\r\n\r\n\r\n\r\n\r\n                    <div className=\"users-table mt-3 mx-1\">\r\n                        <div className=\"title text-center\">Manage Users with TaBaoPhuc</div>\r\n                        <table id=\"TableManageUser\">\r\n                            <tbody>\r\n                                <tr>\r\n                                    <th>Email</th>\r\n                                    <th>First name</th>\r\n                                    <th>Last name</th>\r\n                                    <th>Address</th>\r\n                                    <th>Actions</th>\r\n                                </tr>\r\n                                {arrUsers && arrUsers.length > 0 && arrUsers.map((item, index) => {\r\n                                    // để duyệt 1 vòng lặp, ta có thể dùng function map(), bắt buộc phải return ra 1 thứ gì đó\r\n                                    // thì function map() mới hoạt động được\r\n                                    return (\r\n                                        <tr key={index}>\r\n                                            <td>{item.email}</td>\r\n                                            <td>{item.firstName}</td>\r\n                                            <td>{item.lastName}</td>\r\n                                            <td>{item.address}</td>\r\n                                            <td>\r\n                                                <button className=\"btn-edit\"\r\n                                                    onClick={() => this.handleEditUser(item)}><i className=\"fa-solid fa-pencil\"></i></button>\r\n                                                <button className=\"btn-delete\" onClick={() => this.handleDeleteUser(item)}><i className=\"fa-solid fa-trash\"></i></button>\r\n                                                {/* item là 1 object lưu trữ tất cả thông tin của người dùng */}\r\n                                            </td>\r\n                                        </tr>\r\n                                    )\r\n                                })}\r\n                            </tbody>\r\n\r\n                        </table>\r\n                    </div>\r\n                </div>\r\n                <MdEditor style={{ height: '500px' }} renderHTML={text => mdParser.render(text)} onChange={handleEditorChange} />\r\n            </React.Fragment>\r\n\r\n        );\r\n    }\r\n\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        listUsers: state.admin.users\r\n    };\r\n};\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n    return {\r\n        fetchUserRedux: () => dispatch(actions.fetchAllUsersStart()),\r\n        deleteUserRedux: (id) => dispatch(actions.deleteUser(id)),\r\n    };\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(TableManageUser);\r\n","C:\\Users\\1\\OneDrive\\Documents\\GitHub\\webcaytrongVNUA\\test\\webcaytrongVNUA\\webcaytrongVNUA\\React\\src\\containers\\System\\ManageDoctor.js",["299","300","301","302"],"import React, { Component } from 'react';\r\nimport { FormattedMessage } from 'react-intl';\r\nimport { connect } from 'react-redux';\r\nimport { CRUD_ACTIONS, LANGUAGES } from '../../utils';\r\nimport './ManageDoctor.scss';\r\nimport * as actions from \"../../store/actions\";\r\n//import actions ở trên để lấy data\r\nimport MarkdownIt from 'markdown-it';\r\nimport MdEditor from 'react-markdown-editor-lite';\r\nimport 'react-markdown-editor-lite/lib/index.css';\r\nimport Select from 'react-select';\r\nimport { getDetailInforDoctor } from '../../services/userService';\r\nconst mdParser = new MarkdownIt();\r\n\r\n// nếu muốn import 1 function thì ta dùng dấu ngoặc nhọn\r\nclass ManageDoctor extends Component {\r\n    // PROPS stands for properties and is being used for passing data from one component to another.\r\n    // But the important part here is that data with props are being passed in a uni-directional flow. ( one way from parent to child)\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            //Lưu vào bảng markdown\r\n            contentMarkdown: '',\r\n            contentHTML: '',\r\n            //tạo hai biến content này để lưu giá trị kiểu text và lưu gia trị kiểu html\r\n            selectedDoctor: '',\r\n            description: '',\r\n            listDoctors: [],\r\n            hasOldData: false,\r\n\r\n            //lưu vào bảng doctor_infor\r\n            listPrice: [],\r\n            listPayment: [],\r\n            listProvince: [],\r\n            listClinic: [],\r\n            listSpecialty: [],\r\n            selectedPrice: '',\r\n            selectedPayment: '',\r\n            selectProvince: '',\r\n            selectedClinic: '', \r\n            selectedSpecialty: '',\r\n            nameClinic: '',\r\n            addressClinic: '',\r\n            note: '',\r\n            clinicId: '',\r\n            specialtyId: ''\r\n\r\n        }\r\n    }\r\n    //để lưu giá trị của 1 biến components, ta dùng state\r\n    //Component là một block code độc lập để phân chia các UI (giao diện người dùng) thành các phân nhỏ riêng lẻ để dễ dàng quản lý và tái sử dụng.\r\n\r\n    componentDidMount() {\r\n        this.props.fetchAllDoctors()\r\n        //tất cả dữ liệu lấy được từ fetchAllDoctors, getAllRequiredDoctorInfor sẽ được ghi vào props cha, cụ thể là this.props;\r\n        this.props.getAllRequiredDoctorInfor();\r\n    }\r\n    buildDataInputSelect = (inputData, type) => {\r\n        console.log(\"check input data\", inputData)\r\n        //inputData đã được lấy từ componentDidMount(), cụ thể là this.props; \r\n        let result = [];\r\n        let { language } = this.props;\r\n        if (inputData && inputData.length > 0) {\r\n            if (type === 'USERS') {\r\n                inputData.map((item, index) => {\r\n                    let object = {};\r\n                    let labelEn = `${item.lastName} ${item.firstName} `;\r\n                    let labelVi = `${item.firstName} ${item.lastName}`;\r\n                    object.label = language === LANGUAGES.VI ? labelVi : labelEn;\r\n                    object.value = item.id;\r\n                    result.push(object);\r\n                })\r\n            }\r\n            if (type === 'PRICE') {\r\n                inputData.map((item, index) => {\r\n                    let object = {};\r\n                    let labelEn = `${item.valueEn} USD`;\r\n                    let labelVi = `${item.valueVi}`;\r\n                    object.label = language === LANGUAGES.VI ? labelVi : labelEn;\r\n                    object.value = item.keyMap;\r\n                    result.push(object);\r\n                })\r\n            }\r\n            if (type === 'PAYMENT' || type === 'PROVINCE') {\r\n                inputData.map((item, index) => {\r\n                    let object = {};\r\n                    let labelEn = `${item.valueEn}`;\r\n                    let labelVi = ` ${item.valueVi }`;\r\n                    object.label = language === LANGUAGES.VI ? labelVi : labelEn;\r\n                    object.value = item.keyMap;\r\n                    result.push(object);\r\n                })\r\n            }\r\n            if (type === 'SPECIALTY') {\r\n                inputData.map((item, index) => {\r\n                    let object = {};\r\n                    object.label = item.name;\r\n                    object.value = item.id;\r\n                    result.push(object);\r\n                })\r\n            }\r\n\r\n        }\r\n        return result;\r\n    }\r\n    componentDidUpdate(prevProps, prevState, snapshot) {\r\n        if (prevProps.allDoctors !== this.props.allDoctors) {\r\n            //allDoctors đã được lấy từ file AdminReducer\r\n            let dataSelect = this.buildDataInputSelect(this.props.allDoctors, 'USERS')\r\n            this.setState({\r\n                listDoctors: dataSelect\r\n            })\r\n        }\r\n        if (prevProps.allRequiredDoctorInfor !== this.props.allRequiredDoctorInfor) {\r\n            let { resPayment, resPrice, resProvince, resSpecialty } = this.props.allRequiredDoctorInfor;\r\n            let dataSelectPrice = this.buildDataInputSelect(resPrice, 'PRICE');\r\n            let dataSelectPayment = this.buildDataInputSelect(resPayment, 'PAYMENT');\r\n            let dataSelectProvince = this.buildDataInputSelect(resProvince, 'PROVINCE');\r\n            let dataSelectSpecialty = this.buildDataInputSelect(resSpecialty, 'SPECIALTY');\r\n            console.log('bao phuc check data new: ', dataSelectPrice, dataSelectPayment, dataSelectProvince,dataSelectSpecialty);\r\n            this.setState({\r\n                listPrice: dataSelectPrice,\r\n                listPayment: dataSelectPayment,\r\n                listProvince: dataSelectProvince,\r\n                listSpecialty: dataSelectSpecialty\r\n            })\r\n        }\r\n        if (prevProps.language !== this.props.language) {\r\n            let dataSelect = this.buildDataInputSelect(this.props.allDoctors, 'USERS');\r\n            let { resPrice, resPayment, resProvince, resSpecialty } = this.props.allRequiredDoctorInfor;\r\n            let dataSelectPrice = this.buildDataInputSelect(resPrice, 'PRICE');\r\n            let dataSelectPayment = this.buildDataInputSelect(resPayment, 'PAYMENT');\r\n            let dataSelectProvince = this.buildDataInputSelect(resProvince, 'PROVINCE');\r\n            let dataSelectSpecialty = this.buildDataInputSelect(resSpecialty, 'SPECIALTY');\r\n            this.setState({\r\n                listDoctors: dataSelect,\r\n                listProvince: dataSelectProvince,\r\n                listPrice: dataSelectPrice,\r\n                listPayment: dataSelectPayment,\r\n                listSpecialty: dataSelectSpecialty\r\n            })\r\n\r\n        }\r\n    }\r\n    handleEditorChange = ({ html, text }) => {\r\n        this.setState({\r\n            contentMarkdown: text,\r\n            contentHTML: html,\r\n        })\r\n    }\r\n\r\n    handleSaveContentMarkdown = () => {\r\n        let { hasOldData } = this.state;\r\n        this.props.saveDetailDoctor({\r\n            contentHTML: this.state.contentHTML,\r\n            contentMarkdown: this.state.contentMarkdown,\r\n            description: this.state.description,\r\n            doctorId: this.state.selectedDoctor.value,\r\n            action: hasOldData === true ? CRUD_ACTIONS.EDIT : CRUD_ACTIONS.CREATE,\r\n            selectedPrice: this.state.selectedPrice.value,\r\n            selectedPayment: this.state.selectedPayment.value,\r\n            selectProvince: this.state.selectProvince.value,\r\n            nameClinic: this.state.nameClinic,\r\n            addressClinic: this.state.addressClinic,\r\n            note: this.state.note,\r\n            clinicId: this.state.selectedClinic && this.state.selectedClinic.value ? this.state.selectedClinic.value : '',\r\n            specialtyId: this.state.selectedSpecialty.value\r\n\r\n            //doctorId: this.state.selectedDoctor.value dùng để gán giá trị item.id cho doctorId rồi lưu vào db\r\n        })\r\n    }\r\n    handleChangeSelect = async (selectedDoctor) => {\r\n        this.setState({ selectedDoctor }, () =>\r\n            console.log(`Doctor selected:`, this.state.selectedDoctor)\r\n        );\r\n        let {listPayment,listPrice,listProvince, listSpecialty} = this.state;\r\n        let res = await getDetailInforDoctor(selectedDoctor.value);\r\n        if (res && res.errCode === 0 && res.data && res.data.Markdown) {\r\n            let markdown = res.data.Markdown;\r\n            let addressClinic = '', nameClinic = '', note='',paymentId = '',\r\n            priceId = '', provinceId = '',selectedPayment='', selectedPrice = '',\r\n             selectProvince='', selectedSpecialty='', specialtyId='';\r\n            if(res.data.Doctor_Infor){\r\n                addressClinic = res.data.Doctor_Infor.addressClinic;\r\n                nameClinic = res.data.Doctor_Infor.nameClinic;\r\n                note = res.data.Doctor_Infor.note;\r\n                paymentId = res.data.Doctor_Infor.paymentId;\r\n                priceId = res.data.Doctor_Infor.priceId;\r\n                provinceId = res.data.Doctor_Infor.provinceId;\r\n                specialtyId = res.data.Doctor_Infor.specialtyId;\r\n                selectedPayment = listPayment.find(item => {\r\n                    return item && item.value ===paymentId\r\n                })\r\n                selectedPrice = listPrice.find(item => {\r\n                    return item && item.value === priceId\r\n                })\r\n                selectProvince = listProvince.find(item => {\r\n                    return item && item.value === provinceId\r\n                })\r\n                selectedSpecialty = listSpecialty.find(item => {\r\n                    return item && item.value === specialtyId\r\n                })\r\n            }\r\n            this.setState({\r\n                contentHTML: markdown.contentHTML,\r\n                contentMarkdown: markdown.contentMarkdown,\r\n                description: markdown.description,\r\n                hasOldData: true,\r\n                addressClinic: addressClinic,\r\n                nameClinic: nameClinic,\r\n                note: note,\r\n                selectedPayment: selectedPayment,\r\n                selectedPrice: selectedPrice,\r\n                selectProvince: selectProvince,\r\n                selectedSpecialty: selectedSpecialty\r\n            })\r\n            //để lấy thông tin từ bảng markdown rồi in ra màn hình, ta có thể gọi api như trên, rồi dùng hàm setState\r\n        } else {\r\n            this.setState({\r\n                contentHTML: '',\r\n                contentMarkdown: '',\r\n                description: '',\r\n                hasOldData: false,\r\n                addressClinic: '',\r\n                nameClinic: '',\r\n                note: '',\r\n                selectedPayment: '',\r\n                selectedPrice: '',\r\n                selectProvince: '',\r\n                selectedSpecialty: ''\r\n            })\r\n        }\r\n\r\n    };\r\n    handleChangeSelectDoctorInfor = async (selectedDoctor, name) => {\r\n        let stateName = name.name;\r\n        let stateCopy = { ...this.state };\r\n        stateCopy[stateName] = selectedDoctor;\r\n        this.setState({\r\n            ...stateCopy\r\n        })\r\n    }\r\n    handleOnChangeText = (event, id) => {\r\n        let stateCopy = { ...this.state };\r\n        stateCopy[id] = event.target.value;\r\n        this.setState({\r\n            ...stateCopy\r\n        })\r\n    }\r\n    //thêm id vào để tái tận dụng cho các state khác nhau, chỉ việc thay id = tên state chúng ta muốn ở các component là dùng được.\r\n    render() {\r\n\r\n        let { hasOldData } = this.state;\r\n        //khi muốn render ra 1 thứ gì đó trong react, chúng ta phải có hàm return, và trong đó bắt buộc là 1 khối\r\n\r\n        return (\r\n            <div className='manage-doctor-container'>\r\n                <div className=\"users-container\">\r\n                    <div className=\"users-table mt-3 mx-1\">\r\n                        <div className=\"title text-center\">\r\n                            <FormattedMessage id=\"admin.manage-doctor.title\" />\r\n                        </div>\r\n                        <div className=\" more-info\">\r\n                            <div className=\"content-left form-group\">\r\n\r\n                                <label><FormattedMessage id=\"admin.manage-doctor.select-doctor\" /></label>\r\n                                <Select\r\n                                    value={this.state.selectedDoctor}\r\n                                    onChange={this.handleChangeSelect}\r\n                                    options={this.state.listDoctors}\r\n                                    placeholder={<FormattedMessage id=\"admin.manage-doctor.select-doctor\" />}\r\n                                />\r\n                            </div>\r\n                            <div className=\"content-right\">\r\n                                <label><FormattedMessage id=\"admin.manage-doctor.intro\" /></label>\r\n                                <textarea className=\"form-control\" rows=\"4\"\r\n                                    onChange={(event) => this.handleOnChangeText(event, 'description')}\r\n                                    value={this.state.description}>\r\n                                    ...\r\n                                </textarea>\r\n\r\n                            </div>\r\n                        </div>\r\n                        <div className=\" more-infor-extra row\">\r\n                            <div className=\"col-4 form-group\">\r\n                                <label><FormattedMessage id=\"admin.manage-doctor.price\" /></label>\r\n                                <Select\r\n                                    value={this.state.selectedPrice}\r\n                                    onChange={this.handleChangeSelectDoctorInfor}\r\n                                    options={this.state.listPrice}\r\n                                    placeholder={<FormattedMessage id=\"admin.manage-doctor.price\" />}\r\n                                    name=\"selectedPrice\"\r\n                                />\r\n                            </div>\r\n                            <div className=\"col-4 form-group\">\r\n                                <label><FormattedMessage id=\"admin.manage-doctor.payment\" /></label>\r\n                                <Select\r\n                                    value={this.state.selectedPayment}\r\n                                    onChange={this.handleChangeSelectDoctorInfor}\r\n                                    options={this.state.listPayment}\r\n                                    placeholder={<FormattedMessage id=\"admin.manage-doctor.payment\" />}\r\n                                    name=\"selectedPayment\"\r\n                                />\r\n                            </div>\r\n                            <div className=\"col-4 form-group\">\r\n                                <label><FormattedMessage id=\"admin.manage-doctor.province\" /></label>\r\n                                <Select\r\n                                    value={this.state.selectProvince}\r\n                                    onChange={this.handleChangeSelectDoctorInfor}\r\n                                    options={this.state.listProvince}\r\n                                    placeholder={<FormattedMessage id=\"admin.manage-doctor.province\" />}\r\n                                    name=\"selectProvince\"\r\n                                />\r\n                            </div>\r\n                            <div className=\"col-4 form-group\">\r\n                                <label><FormattedMessage id=\"admin.manage-doctor.nameClinic\" /></label>\r\n                                <input className=\"form-control\"\r\n                                    onChange={(event)=> this.handleOnChangeText(event, 'nameClinic')}\r\n                                    value={this.state.nameClinic}\r\n                                />\r\n                            </div>\r\n                            <div className=\"col-4 form-group\">\r\n                                <label><FormattedMessage id=\"admin.manage-doctor.addressClinic\" /></label>\r\n                                <input className=\"form-control\"\r\n                                    onChange={(event) => this.handleOnChangeText(event, 'addressClinic')}\r\n                                    value={this.state.addressClinic}\r\n                                />\r\n                            </div>\r\n                            <div className=\"col-4 form-group\">\r\n                                <label><FormattedMessage id=\"admin.manage-doctor.select-clinic\" /></label>\r\n                                <input className=\"form-control\"\r\n                                    onChange={(event) => this.handleOnChangeText(event, 'selectedClinic')}\r\n                                    value={this.state.selectedClinic}\r\n                                />\r\n                                {/* <Select\r\n                                    value={this.state.selectedClinic}\r\n                                    onChange={this.handleChangeSelectDoctorInfor}\r\n                                    options={this.state.listClinic}\r\n                                    placeholder={<FormattedMessage id=\"admin.manage-doctor.select-clinic\" />}\r\n                                    name=\"selectedClinic\"\r\n                                /> */}\r\n                            </div>\r\n\r\n                            \r\n                        </div>\r\n                        <div className=\"row\">\r\n                            <div className=\"col-4 form-group\">\r\n                                <label><FormattedMessage id=\"admin.manage-doctor.specialty\" /></label>\r\n                                <Select\r\n                                    value={this.state.selectedSpecialty}\r\n                                    onChange={this.handleChangeSelectDoctorInfor}\r\n                                    options={this.state.listSpecialty}\r\n                                    placeholder={<FormattedMessage id=\"admin.manage-doctor.specialty\" />}\r\n                                    name=\"selectedSpecialty\"\r\n                                />\r\n                            </div>\r\n                           \r\n                            <div className=\"col-8 form-group\">\r\n                                <label><FormattedMessage id=\"admin.manage-doctor.note\" /></label>\r\n                                <input className=\"form-control\"\r\n                                    onChange={(event) => this.handleOnChangeText(event, 'note')}\r\n                                    value={this.state.note}\r\n                                />\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"container-fluid manage-doctor-editor\">\r\n                        <MdEditor style={{ height: '300px' }} renderHTML={text => mdParser.render(text)}\r\n                            onChange={this.handleEditorChange}\r\n                            value={this.state.contentMarkdown} />\r\n                    </div>\r\n                </div>\r\n\r\n                <button\r\n                    onClick={() => this.handleSaveContentMarkdown()}\r\n                    className={hasOldData === true ? \"save-content-doctor\" : \"create-content-doctor\"}>\r\n                    {hasOldData === true ?\r\n                        <span>\r\n                            <FormattedMessage id=\"admin.manage-doctor.save\" />\r\n                        </span> : <span><FormattedMessage id=\"admin.manage-doctor.add\" /></span>}</button>\r\n            </div>\r\n\r\n\r\n\r\n        );\r\n    }\r\n\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        language: state.app.language,\r\n        allDoctors: state.admin.allDoctors,\r\n        allRequiredDoctorInfor: state.admin.allRequiredDoctorInfor,\r\n    };\r\n};\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n    return {\r\n        fetchAllDoctors: () => dispatch(actions.fetchAllDoctors()),\r\n        getAllRequiredDoctorInfor: () => dispatch(actions.getRequiredDoctorInfor()),\r\n        saveDetailDoctor: (data) => dispatch(actions.saveDetailDoctor(data))\r\n    };\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(ManageDoctor);\r\n","C:\\Users\\1\\OneDrive\\Documents\\GitHub\\webcaytrongVNUA\\test\\webcaytrongVNUA\\webcaytrongVNUA\\React\\src\\containers\\Patient\\Doctor\\DetailDoctor.js",[],"C:\\Users\\1\\OneDrive\\Documents\\GitHub\\webcaytrongVNUA\\test\\webcaytrongVNUA\\webcaytrongVNUA\\React\\src\\routes\\Doctor.js",["303","304"],"import React, { Component } from 'react';\r\nimport { FormattedMessage } from 'react-intl';\r\nimport { connect } from 'react-redux';\r\nimport { Redirect, Route, Switch } from 'react-router-dom';\r\nimport ManageSchedule from '../containers/Patient/Doctor/ManageSchedule';\r\nimport Header from '../containers/Header/Header';\r\nclass Doctor extends Component {\r\n    // PROPS stands for properties and is being used for passing data from one component to another.\r\n    // But the important part here is that data with props are being passed in a uni-directional flow. ( one way from parent to child)\r\n\r\n    //để lưu giá trị của 1 biến components, ta dùng state\r\n    //Component là một block code độc lập để phân chia các UI (giao diện người dùng) thành các phân nhỏ riêng lẻ để dễ dàng quản lý và tái sử dụng.\r\n\r\n\r\n    render() {\r\n        const { isLoggedIn } = this.props;\r\n\r\n        //khi muốn render ra 1 thứ gì đó trong react, chúng ta phải có hàm return, và trong đó bắt buộc là 1 khối\r\n\r\n\r\n        return (\r\n            <React.Fragment>\r\n                {isLoggedIn && <Header />}\r\n                <div className=\"container system-container\">\r\n                    <div className=\"system-list\">\r\n                        <Switch>\r\n                            <Route path=\"/doctor/manage-schedule\" component={ManageSchedule} />\r\n                        </Switch>\r\n                    </div>\r\n                </div>\r\n            </React.Fragment>\r\n\r\n\r\n\r\n        );\r\n    }\r\n\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        // language: state.app.language,\r\n        isLoggedIn: state.user.isLoggedIn,\r\n        systemMenuPath: state.app.systemMenuPath\r\n    };\r\n};\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n    return {\r\n\r\n    };\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Doctor);\r\n","C:\\Users\\1\\OneDrive\\Documents\\GitHub\\webcaytrongVNUA\\test\\webcaytrongVNUA\\webcaytrongVNUA\\React\\src\\containers\\Patient\\Doctor\\ManageSchedule.js",["305","306","307","308"],"import React, { Component } from 'react';\r\nimport { FormattedMessage } from 'react-intl';\r\nimport { connect } from 'react-redux';\r\nimport './ManageSchedule.scss';\r\nimport Select from 'react-select';\r\nimport * as actions from \"../../../store/actions\";\r\nimport { CRUD_ACTIONS, LANGUAGES, dateFormat } from '../../../utils';\r\nimport DatePicker from '../../../components/Input/DatePicker';\r\nimport moment from 'moment';\r\nimport { toast } from \"react-toastify\";\r\nimport _ from 'lodash';\r\nimport {saveBulkScheduleDoctor} from '../../../services/userService';\r\nclass ManageSchedule extends Component {\r\n    // PROPS stands for properties and is being used for passing data from one component to another.\r\n    // But the important part here is that data with props are being passed in a uni-directional flow. ( one way from parent to child)\r\n\r\n    //để lưu giá trị của 1 biến components, ta dùng state\r\n    //Component là một block code độc lập để phân chia các UI (giao diện người dùng) thành các phân nhỏ riêng lẻ để dễ dàng quản lý và tái sử dụng.\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            listDoctors: [],\r\n            selectedDoctor: {},\r\n            currentDate: '',\r\n            rangeTime: [],\r\n            minDate: moment().calendar(),\r\n        }\r\n    }\r\n    componentDidMount() {\r\n        this.props.fetchAllDoctors();\r\n        this.props.fetchAllScheduleTimes();\r\n    }\r\n    componentDidUpdate(prevProps, prevState, snapshot) {\r\n        if (prevProps.allDoctors !== this.props.allDoctors) {\r\n            let dataSelect = this.buildDataInputSelect(this.props.allDoctors)\r\n            this.setState({\r\n                listDoctors: dataSelect\r\n            })\r\n        }\r\n        //Là để check xem khi API đã trả về dữ liệu rồi thì làm gì...\r\n        if (prevProps.allScheduleTime !== this.props.allScheduleTime) {\r\n            let data = this.props.allScheduleTime;\r\n            if (data && data.length > 0) {\r\n                data = data.map(item => ({ ...item, isSelected: false }))\r\n            }\r\n            this.setState({\r\n                rangeTime: data\r\n            })\r\n        }\r\n    }\r\n    buildDataInputSelect = (inputData) => {\r\n        //chúng ta có thể đặt là inputData hoặc gì cũng ok, vì nó phụ thuộc vào props ở bên dưới\r\n        let result = [];\r\n        let { language } = this.props;\r\n        if (inputData && inputData.length > 0) {\r\n          \r\n            inputData.map((item, index) => {\r\n                let object = {};\r\n                let labelEn = `${item.lastName} ${item.firstName}`;\r\n                let labelVi = `${item.firstName} ${item.lastName}`;\r\n                object.label = language === LANGUAGES.VI ? labelVi : labelEn;\r\n                object.value = item.id;\r\n                result.push(object)\r\n            })\r\n          \r\n        }\r\n        return result;\r\n        \r\n    }\r\n    handleChangeSelect = async (selectedOption) => {\r\n        this.setState({ selectedDoctor: selectedOption });\r\n    }\r\n    handleOnChangeDatePicker = (date) => {\r\n        this.setState({\r\n            currentDate: date[0]\r\n            //thư viện date này sẽ trả về 1 array nhiều phần tử\r\n            // nếu ta bấm liên tục nhiều lần, vì vậy date[0] là để lấy giá trị ngày đầu tiên trong array\r\n        })\r\n    }\r\n    handleClickBtnTime = (time) => {\r\n        let { rangeTime } = this.state;\r\n        if (rangeTime && rangeTime.length > 0) {\r\n            rangeTime = rangeTime.map(item => {\r\n                if (item.id === time.id) item.isSelected = !item.isSelected;\r\n                return item;\r\n            })\r\n            this.setState({\r\n                rangeTime: rangeTime\r\n            })\r\n        }\r\n    }\r\n    handleSaveSchedule = async () => {\r\n        let { rangeTime, selectedDoctor, currentDate } = this.state;\r\n        let result = [];\r\n        if (!currentDate) {\r\n            toast.error(\"Invalid date!\");\r\n            \r\n        }\r\n        if (selectedDoctor && _.isEmpty(selectedDoctor)) {\r\n            toast.error(\"Invalid selected doctor! \");\r\n          console.log('check doctor: ', this.state)\r\n            return;\r\n        }\r\n\r\n        let formatedDate = new Date(currentDate).getTime();\r\n        \r\n        if (rangeTime && rangeTime.length > 0) {\r\n            let selectedTime = rangeTime.filter(item => item.isSelected === true);\r\n            if (selectedTime && selectedTime.length > 0) {\r\n                selectedTime.map((schedule, index) => {\r\n                    // chúng ta thay schedule bằng cái gì cũng được, react tự hiểu đấy là 1 phần tử của arr đó\r\n                    let object = {};\r\n                    object.doctorId = selectedDoctor.value;\r\n                    object.date = formatedDate;\r\n                    object.timeType = schedule.keyMap;\r\n                    result.push(object);\r\n                })\r\n            } else {\r\n                toast.error(\"Invalid selected time! \");\r\n                return;\r\n            }\r\n        }\r\n        let res = await saveBulkScheduleDoctor({\r\n            arrSchedule: result,\r\n            doctorId: selectedDoctor.value,\r\n            formatedDate: formatedDate\r\n        })\r\n        if(res && res.errCode === 0){\r\n            toast.success(\"Save Infor succeed!\");\r\n        }else{\r\n            toast.error(\"error saveBulkScheduleDoctor \");\r\n            console.log('error saveBulkScheduleDoctor >>> res: ', res)\r\n        }\r\n        console.log('bao phuc check result: ', result);\r\n        console.log('check res: saveBulkScheduleDoctor : ', res);\r\n    }\r\n    render() {\r\n        let { rangeTime } = this.state;\r\n        let { language } = this.props;\r\nlet today = new Date(new Date().setDate(new Date().getDate()));\r\n        //khi muốn render ra 1 thứ gì đó trong react, chúng ta phải có hàm return, và trong đó bắt buộc là 1 khối\r\n\r\n\r\n        return (\r\n            <div className=\"manage-schedule-container\">\r\n                <div className=\"m-s-title\">\r\n                    <FormattedMessage id=\"manage-schedule.title\"></FormattedMessage>\r\n                </div>\r\n                <div className=\"container\">\r\n                    <div className=\"row\">\r\n                        <div className=\"col-6 form-group\">\r\n                            <label>\r\n                                <FormattedMessage id=\"manage-schedule.choose-doctor\" /> </label>\r\n                            <Select\r\n                                value={this.state.selectedDoctor}\r\n                                onChange={this.handleChangeSelect}\r\n                                options={this.state.listDoctors}\r\n                            />\r\n\r\n                        </div>\r\n                        <div className=\"col-6 form-group\">\r\n                            <label>\r\n                                <FormattedMessage id=\"manage-schedule.choose-date\" /> </label>\r\n                            <DatePicker\r\n                                value={this.state.currentDate}\r\n                                className=\"form-control\"\r\n                                onChange={this.handleOnChangeDatePicker}\r\n                                minDate={today}\r\n                                //minDate là để lấy ngày hiện tại\r\n                            />\r\n\r\n                        </div>\r\n                        <div className=\"col-12 pick-hour-container\">\r\n                            {rangeTime && rangeTime.length > 0 &&\r\n                                rangeTime.map((item, index) => {\r\n                                    return (\r\n                                        <button className={item.isSelected === true ?\r\n                                            \"btn btn-schedule active\" : \"btn btn-schedule\"}\r\n                                            key={index} onClick={() => this.handleClickBtnTime(item)}>\r\n                                            {language === LANGUAGES.VI ? item.valueVi : item.valueEn}\r\n                                        </button>\r\n                                    )\r\n                                })}\r\n                        </div>\r\n                        <div className=\"col-12\">\r\n                            <button className=\"btn btn-primary btn-save-schedule\"\r\n                                onClick={() => this.handleSaveSchedule()}>\r\n                                <FormattedMessage id=\"manage-schedule.save\" />\r\n                            </button>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n\r\n\r\n\r\n        );\r\n    }\r\n\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        language: state.app.language,\r\n        isLoggedIn: state.user.isLoggedIn,\r\n        allDoctors: state.admin.allDoctors,\r\n        allScheduleTime: state.admin.allScheduleTime,\r\n    };\r\n};\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n    return {\r\n        fetchAllDoctors: () => dispatch(actions.fetchAllDoctors()),\r\n        fetchAllScheduleTimes: () => dispatch(actions.fetchAllScheduleTimes())\r\n    };\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(ManageSchedule);\r\n","C:\\Users\\1\\OneDrive\\Documents\\GitHub\\webcaytrongVNUA\\test\\webcaytrongVNUA\\webcaytrongVNUA\\React\\src\\components\\Input\\DatePicker.js",[],"C:\\Users\\1\\OneDrive\\Documents\\GitHub\\webcaytrongVNUA\\test\\webcaytrongVNUA\\webcaytrongVNUA\\React\\src\\containers\\Patient\\Doctor\\DoctorSchedule.js",["309"],"C:\\Users\\1\\OneDrive\\Documents\\GitHub\\webcaytrongVNUA\\test\\webcaytrongVNUA\\webcaytrongVNUA\\React\\src\\containers\\Patient\\Doctor\\DoctorExtraInfor.js",[],"C:\\Users\\1\\OneDrive\\Documents\\GitHub\\webcaytrongVNUA\\test\\webcaytrongVNUA\\webcaytrongVNUA\\React\\src\\containers\\Patient\\Doctor\\Modal\\BookingModal.js",[],"C:\\Users\\1\\OneDrive\\Documents\\GitHub\\webcaytrongVNUA\\test\\webcaytrongVNUA\\webcaytrongVNUA\\React\\src\\containers\\Patient\\Doctor\\ProfileDoctor.js",[],"C:\\Users\\1\\OneDrive\\Documents\\GitHub\\webcaytrongVNUA\\test\\webcaytrongVNUA\\webcaytrongVNUA\\React\\src\\components\\Input\\index.js",[],"C:\\Users\\1\\OneDrive\\Documents\\GitHub\\webcaytrongVNUA\\test\\webcaytrongVNUA\\webcaytrongVNUA\\React\\src\\components\\Input\\InputSuggest.js",[],"C:\\Users\\1\\OneDrive\\Documents\\GitHub\\webcaytrongVNUA\\test\\webcaytrongVNUA\\webcaytrongVNUA\\React\\src\\containers\\Patient\\VerifyEmail.js",[],"C:\\Users\\1\\OneDrive\\Documents\\GitHub\\webcaytrongVNUA\\test\\webcaytrongVNUA\\webcaytrongVNUA\\React\\src\\containers\\auth\\Register.js",["310"],"import React, { Component } from 'react';\r\nimport { FormattedMessage } from 'react-intl';\r\nimport { connect } from 'react-redux';\r\nimport './Register.scss';\r\nimport { emitter } from '../../utils/emitter';\r\nimport { Button, Modal, ModalHeader, ModalBody, ModalFooter } from 'reactstrap';\r\nclass Register extends Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            email: '',\r\n            password: '',\r\n            firstName: '',\r\n            lastName: ' ',\r\n            address: ''\r\n        }\r\n        this.listenToEmitter();\r\n    }\r\n    listenToEmitter() {\r\n        emitter.on('EVENT_CLEAR_MODAL_DATA', () => {\r\n            this.setState({\r\n                email: '',\r\n                password: '',\r\n                firstName: '',\r\n                lastName: ' ',\r\n                address: ''\r\n            })\r\n        })\r\n    }\r\n\r\n    componentDidMount() {\r\n    }\r\n    toggle = () => {\r\n        this.props.toggleFromParent();\r\n    }\r\n    handleOnChangeInput = (event, id) => {\r\n        let copyState = { ...this.state };\r\n        copyState[id] = event.target.value;\r\n        this.setState({\r\n            ...copyState\r\n        });\r\n    }\r\n    checkValidateInput = () => {\r\n        let isValid = true;\r\n        let arrInput = ['email', 'password', 'firstName', 'lastName', 'address'];\r\n        for (let i = 0; i < arrInput.length; i++) {\r\n            if (!this.state[arrInput[i]]) {\r\n                isValid = false;\r\n                alert('Missing parameter: ' + arrInput[i]);\r\n                break;\r\n            }\r\n        }\r\n        return isValid;\r\n    }\r\n    handleAddNewUser = () => {\r\n        let isValid = this.checkValidateInput();\r\n        if (isValid === true) {\r\n            //gọi api để tạo modal\r\n            this.props.createNewUser(this.state, 'DONE!');\r\n        }\r\n    }\r\n    render() {\r\n        return (\r\n            <Modal\r\n                isOpen={this.props.isOpen}\r\n                toggle={() => { this.toggle() }}\r\n                className={'modal-user-container'}\r\n                size=\"lg\">\r\n                <ModalHeader toggle={() => { this.toggle() }}>ADD NEW USER:</ModalHeader>\r\n                <ModalBody>\r\n\r\n                    <div className=\"modal-user-body\">\r\n                        <div className=\"input-container \">\r\n                            <label>Email</label>\r\n                            <input type=\"text\"\r\n                                onChange={(event) => { this.handleOnChangeInput(event, \"email\") }}\r\n                                value={this.state.email}></input>\r\n                        </div>\r\n                        <div className=\"input-container \">\r\n                            <label>Password</label>\r\n                            <input type=\"password\"\r\n                                onChange={(event) => { this.handleOnChangeInput(event, \"password\") }}\r\n                                value={this.state.password}\r\n                            ></input>\r\n                        </div>\r\n                        <div className=\"input-container \">\r\n                            <label>First Name</label>\r\n                            <input type=\"text\"\r\n                                onChange={(event) => { this.handleOnChangeInput(event, \"firstName\") }}\r\n                                value={this.state.firstName}></input>\r\n                        </div>\r\n                        <div className=\"input-container \">\r\n                            <label>Last Name</label>\r\n                            <input type=\"text\"\r\n                                onChange={(event) => { this.handleOnChangeInput(event, \"lastName\") }}\r\n                                value={this.state.lastName}></input>\r\n                        </div>\r\n                        <div className=\"input-container max-width-input\">\r\n                            <label>Address</label>\r\n                            <input type=\"text\"\r\n                                onChange={(event) => { this.handleOnChangeInput(event, \"address\") }}\r\n                                value={this.state.address}></input>\r\n                        </div>\r\n                    </div>\r\n\r\n\r\n                </ModalBody>\r\n                <ModalFooter>\r\n                    <Button color=\"primary\" className=\"px-3\" onClick={() => { this.handleAddNewUser() }}>Add new user</Button>\r\n                    <Button color=\"secondary\" className=\"px-3\" onClick={() => { this.toggle() }}>Cancel</Button>\r\n                </ModalFooter>\r\n            </Modal>\r\n        )\r\n    }\r\n\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n    };\r\n};\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n    return {\r\n    };\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Register);\r\n\r\n\r\n\r\n\r\n","C:\\Users\\1\\OneDrive\\Documents\\GitHub\\webcaytrongVNUA\\test\\webcaytrongVNUA\\webcaytrongVNUA\\React\\src\\containers\\System\\Specialty\\ManageSpecialty.js",["311"],"import React, { Component } from 'react';\r\nimport { FormattedMessage } from 'react-intl';\r\nimport { connect } from 'react-redux';\r\nimport './ManageSpecialty.scss';\r\nimport MarkdownIt from 'markdown-it';\r\nimport MdEditor from 'react-markdown-editor-lite';\r\nimport { CommonUtils } from '../../../utils';\r\nimport { createNewSpecialty } from '../../../services/userService';\r\nimport { toast } from \"react-toastify\";\r\n\r\n//lodash hỗ trợ ta kiểm tra và thao tác với mảng dễ dàng hơn\r\nconst mdParser = new MarkdownIt();\r\n\r\nclass ManageSpecialty extends Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            name: '',\r\n            imageBase64: '',\r\n            descriptionHTML: '',\r\n            descriptionMarkdown: '',\r\n\r\n        }\r\n\r\n    }\r\n\r\n\r\n    async componentDidMount() {\r\n\r\n    }\r\n    async componentDidUpdate(prevProps, prevState, snapshot) {\r\n        if (this.props.language !== prevProps.language) {\r\n\r\n        }\r\n    }\r\n    handleOnChangeInput = (event, id) => {\r\n        let stateCopy = { ...this.state }\r\n        stateCopy[id] = event.target.value;\r\n        this.setState({\r\n            ...stateCopy\r\n        })\r\n    }\r\n    handleEditorChange = ({ html, text }) => {\r\n        this.setState({\r\n            descriptionMarkdown: text,\r\n            descriptionHTML: html,\r\n        })\r\n    }\r\n    handleOnChangeImage = async (event) => {\r\n        let data = event.target.files;\r\n        let file = data[0];\r\n        if (file) {\r\n            let base64 = await CommonUtils.getBase64(file);\r\n           \r\n            this.setState({\r\n               \r\n                imageBase64: base64,\r\n            })\r\n        }\r\n    }\r\n    handleSaveNewSpecialty = async() => {\r\n        let res = await createNewSpecialty(this.state)\r\n        if (res && res.errCode === 0){\r\n            toast.success('Add new specialty successfully')\r\n            this.setState({\r\n                name: '',\r\n                imageBase64: '',\r\n                descriptionHTML: '',\r\n                descriptionMarkdown: '',\r\n            })\r\n        }else{\r\n            toast.error('Something wrongs...')\r\n\r\n        }\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"manage-specialty-container\">\r\n                <div className=\"ms-title\">Quản lý chuyên khoa</div>\r\n                <div className=\"add-new-specialty row\">\r\n                    <div className=\"col-6 form-group\">\r\n                        <label>Tên chuyên khoa</label>\r\n                        <input className=\"form-control\" type=\"text\" value={this.state.name}\r\n                        onChange={(event) => this.handleOnChangeInput(event, 'name')}/>\r\n                    </div>\r\n                    <div className=\"col-6 form-group\">\r\n                        <label>Ảnh chuyên ngành</label>\r\n                        <input className=\"form-control-file\" type=\"file\" \r\n                            onChange={(event) => this.handleOnChangeImage(event)} />\r\n                    </div>\r\n                    <div className=\"col-12\">\r\n                       <MdEditor\r\n                       style={{height: '300px'}}\r\n                       renderHTML={text => mdParser.render(text)}\r\n                       onChange={this.handleEditorChange}\r\n                       value={this.state.descriptionMarkdown}\r\n                       />\r\n                    </div>\r\n                    <div className=\"col-12\">\r\n                        <button className=\"btn-save-specialty\"\r\n                            onClick={() => this.handleSaveNewSpecialty()}>\r\n                                Save\r\n                            \r\n                        </button>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        language: state.app.language,\r\n    };\r\n};\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n    return {\r\n    };\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(ManageSpecialty);\r\n\r\n\r\n\r\n\r\n","C:\\Users\\1\\OneDrive\\Documents\\GitHub\\webcaytrongVNUA\\test\\webcaytrongVNUA\\webcaytrongVNUA\\React\\src\\containers\\Patient\\Specialty\\DetailSpecialty.js",["312","313","314"],"C:\\Users\\1\\OneDrive\\Documents\\GitHub\\webcaytrongVNUA\\test\\webcaytrongVNUA\\webcaytrongVNUA\\React\\src\\containers\\System\\Clinic\\ManageClinic.js",["315"],{"ruleId":"316","replacedBy":"317"},{"ruleId":"318","replacedBy":"319"},{"ruleId":"320","severity":1,"message":"321","line":6,"column":10,"nodeType":"322","messageId":"323","endLine":6,"endColumn":26},{"ruleId":"320","severity":1,"message":"324","line":11,"column":10,"nodeType":"322","messageId":"323","endLine":11,"endColumn":16},{"ruleId":"316","replacedBy":"325"},{"ruleId":"318","replacedBy":"326"},{"ruleId":"327","severity":1,"message":"328","line":28,"column":1,"nodeType":"329","endLine":33,"endColumn":3},{"ruleId":"320","severity":1,"message":"321","line":2,"column":10,"nodeType":"322","messageId":"323","endLine":2,"endColumn":26},{"ruleId":"316","replacedBy":"330"},{"ruleId":"318","replacedBy":"331"},{"ruleId":"320","severity":1,"message":"332","line":2,"column":8,"nodeType":"322","messageId":"323","endLine":2,"endColumn":9},{"ruleId":"320","severity":1,"message":"333","line":14,"column":17,"nodeType":"322","messageId":"323","endLine":14,"endColumn":21},{"ruleId":"327","severity":1,"message":"334","line":1,"column":1,"nodeType":"329","endLine":13,"endColumn":3},{"ruleId":"320","severity":1,"message":"321","line":2,"column":10,"nodeType":"322","messageId":"323","endLine":2,"endColumn":26},{"ruleId":"320","severity":1,"message":"321","line":2,"column":10,"nodeType":"322","messageId":"323","endLine":2,"endColumn":26},{"ruleId":"335","severity":1,"message":"336","line":40,"column":13,"nodeType":"337","messageId":"338","endLine":49,"endColumn":14},{"ruleId":"320","severity":1,"message":"339","line":2,"column":10,"nodeType":"322","messageId":"323","endLine":2,"endColumn":18},{"ruleId":"320","severity":1,"message":"340","line":23,"column":15,"nodeType":"322","messageId":"323","endLine":23,"endColumn":23},{"ruleId":"341","severity":1,"message":"342","line":38,"column":29,"nodeType":"343","endLine":38,"endColumn":94},{"ruleId":"320","severity":1,"message":"344","line":10,"column":10,"nodeType":"322","messageId":"323","endLine":10,"endColumn":18},{"ruleId":"320","severity":1,"message":"345","line":192,"column":9,"nodeType":"322","messageId":"323","endLine":192,"endColumn":15},{"ruleId":"320","severity":1,"message":"321","line":2,"column":10,"nodeType":"322","messageId":"323","endLine":2,"endColumn":26},{"ruleId":"346","severity":1,"message":"347","line":65,"column":45,"nodeType":"348","messageId":"349","endLine":65,"endColumn":47},{"ruleId":"346","severity":1,"message":"347","line":75,"column":45,"nodeType":"348","messageId":"349","endLine":75,"endColumn":47},{"ruleId":"346","severity":1,"message":"347","line":85,"column":45,"nodeType":"348","messageId":"349","endLine":85,"endColumn":47},{"ruleId":"346","severity":1,"message":"347","line":95,"column":45,"nodeType":"348","messageId":"349","endLine":95,"endColumn":47},{"ruleId":"320","severity":1,"message":"321","line":2,"column":10,"nodeType":"322","messageId":"323","endLine":2,"endColumn":26},{"ruleId":"320","severity":1,"message":"339","line":4,"column":10,"nodeType":"322","messageId":"323","endLine":4,"endColumn":18},{"ruleId":"320","severity":1,"message":"350","line":7,"column":10,"nodeType":"322","messageId":"323","endLine":7,"endColumn":22},{"ruleId":"320","severity":1,"message":"351","line":7,"column":35,"nodeType":"322","messageId":"323","endLine":7,"endColumn":45},{"ruleId":"346","severity":1,"message":"347","line":57,"column":41,"nodeType":"348","messageId":"349","endLine":57,"endColumn":43},{"ruleId":"346","severity":1,"message":"347","line":110,"column":52,"nodeType":"348","messageId":"349","endLine":110,"endColumn":54},{"ruleId":"320","severity":1,"message":"352","line":5,"column":8,"nodeType":"322","messageId":"323","endLine":5,"endColumn":20},{"ruleId":"320","severity":1,"message":"321","line":2,"column":10,"nodeType":"322","messageId":"323","endLine":2,"endColumn":26},{"ruleId":"320","severity":1,"message":"321","line":2,"column":10,"nodeType":"322","messageId":"323","endLine":2,"endColumn":26},{"ruleId":"320","severity":1,"message":"321","line":2,"column":10,"nodeType":"322","messageId":"323","endLine":2,"endColumn":26},{"ruleId":"346","severity":1,"message":"347","line":41,"column":38,"nodeType":"348","messageId":"349","endLine":41,"endColumn":40},{"ruleId":"346","severity":1,"message":"347","line":86,"column":34,"nodeType":"348","messageId":"349","endLine":86,"endColumn":36},{"ruleId":"320","severity":1,"message":"321","line":2,"column":10,"nodeType":"322","messageId":"323","endLine":2,"endColumn":26},"no-native-reassign",["353"],"no-negated-in-lhs",["354"],"no-unused-vars","'FormattedMessage' is defined but never used.","Identifier","unusedVar","'reject' is defined but never used.",["353"],["354"],"import/no-anonymous-default-export","Assign arrow function to a variable before exporting as module default","ExportDefaultDeclaration",["353"],["354"],"'_' is defined but never used.","'data' is assigned a value but never used.","Assign object to a variable before exporting as module default","no-lone-blocks","Nested block is redundant.","BlockStatement","redundantNestedBlock","'Redirect' is defined but never used.","'userInfo' is assigned a value but never used.","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","'isBuffer' is defined but never used.","'avatar' is assigned a value but never used.","array-callback-return","Array.prototype.map() expects a return value from arrow function.","ArrowFunctionExpression","expectedInside","'CRUD_ACTIONS' is defined but never used.","'dateFormat' is defined but never used.","'localization' is defined but never used.","no-global-assign","no-unsafe-negation"]